// <autogenerated>
//   This file was generated by T4 code generator GenerateAttributeSetInstanceDomainNHibernate.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;
using Dddml.Wms.Domain.AttributeSetInstance;
using Dddml.Wms.Specialization.NHibernate;
using NHibernate;
using NHibernate.Criterion;
using Spring.Transaction.Interceptor;
using Dddml.Support.Criterion;
using NHibernateICriterion = NHibernate.Criterion.ICriterion;
using NHibernateRestrictions = NHibernate.Criterion.Restrictions;
using NHibernateDisjunction = NHibernate.Criterion.Disjunction;

namespace Dddml.Wms.Domain.AttributeSetInstance.NHibernate
{

	public partial class NHibernateAttributeSetInstanceStateRepository : IAttributeSetInstanceStateRepository
	{
		public ISessionFactory SessionFactory { get; set; }

		protected ISession CurrentSession {
			get { return this.SessionFactory.GetCurrentSession (); }
		}

        private static readonly ISet<string> _readOnlyPropertyNames = new SortedSet<string>(new String[] { "AttributeSetInstanceId", "AttributeSetId", "OrganizationId", "ReferenceId", "SerialNumber", "LotId", "StatusId", "ImageUrl", "Description", "Hash", "WidthInch", "DiameterInch", "WeightLbs", "WeightKg", "AirDryWeightLbs", "AirDryWeightKg", "AirDryMetricTon", "PackageCount", "AirDryPct", "_F_B_0_", "_F_I_0_", "_F_L_0_", "_F_DT_0_", "_F_N_0_", "_F_C5_0_", "_F_C10_0_", "_F_C20_0_", "_F_C50_0_", "_F_C100_0_", "_F_C200_0_", "_F_C500_0_", "_F_C1000_0_", "_F_B_1_", "_F_I_1_", "_F_L_1_", "_F_DT_1_", "_F_N_1_", "_F_C5_1_", "_F_C10_1_", "_F_C20_1_", "_F_C50_1_", "_F_C100_1_", "_F_C200_1_", "_F_B_2_", "_F_I_2_", "_F_L_2_", "_F_DT_2_", "_F_N_2_", "_F_C5_2_", "_F_C10_2_", "_F_C20_2_", "_F_C50_2_", "_F_B_3_", "_F_I_3_", "_F_L_3_", "_F_DT_3_", "_F_N_3_", "_F_C5_3_", "_F_C10_3_", "_F_C20_3_", "_F_C50_3_", "_F_B_4_", "_F_I_4_", "_F_L_4_", "_F_DT_4_", "_F_N_4_", "_F_C5_4_", "_F_C10_4_", "_F_C20_4_", "_F_C50_4_", "Version", "CreatedBy", "CreatedAt", "UpdatedBy", "UpdatedAt", "Active", "Deleted" });
    
        public IReadOnlyProxyGenerator ReadOnlyProxyGenerator { get; set; }

		public NHibernateAttributeSetInstanceStateRepository()
		{
		}

		[Transaction (ReadOnly = true)]
		public IAttributeSetInstanceState Get(string id, bool nullAllowed)
		{
			IAttributeSetInstanceState state = CurrentSession.Get<AttributeSetInstanceState> (id);
			if (!nullAllowed && state == null) {
				state = new AttributeSetInstanceState ();
				(state as AttributeSetInstanceState).AttributeSetInstanceId = id;
			}
            if (ReadOnlyProxyGenerator != null && state != null)
            {
                return ReadOnlyProxyGenerator.CreateProxy<IAttributeSetInstanceState>(state, new Type[] {  }, _readOnlyPropertyNames);
            }
			return state;
		}

		[Transaction]
		public void Save(IAttributeSetInstanceState state)
		{
            IAttributeSetInstanceState s = state;
            if (ReadOnlyProxyGenerator != null)
            {
                s = ReadOnlyProxyGenerator.GetTarget<IAttributeSetInstanceState>(state);
            }
			CurrentSession.SaveOrUpdate (s);

			var saveable = s as ISaveable;
			if (saveable != null) {
				saveable.Save ();
			}
            CurrentSession.Flush();
		}

        //protected static void AddNotDeletedRestriction(ICriteria criteria)
        //{
        //    criteria.Add(NHibernateRestrictions.Eq("Deleted", false));
        //}

	}
}

