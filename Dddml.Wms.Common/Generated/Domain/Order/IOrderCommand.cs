// <autogenerated>
//   This file was generated by T4 code generator GenerateOrderDomain.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;
using Dddml.Wms.Domain.Order;
using Dddml.Wms.Domain.PartyRole;

namespace Dddml.Wms.Domain.Order
{
	public interface IOrderCommand : IAggregateCommand<string, long>, ICommandDto
	{
		long Version { get; set; }

		string OrderId { get; set; }

	}


	public interface ICreateOrMergePatchOrDeleteOrder : IOrderCommand
	{

		string OrderTypeId { get; set; }

		string OrderName { get; set; }

		string ExternalId { get; set; }

		string SalesChannelEnumId { get; set; }

		DateTime? OrderDate { get; set; }

		string Priority { get; set; }

		DateTime? EntryDate { get; set; }

		DateTime? PickSheetPrintedDate { get; set; }

		string StatusId { get; set; }

		string CurrencyUomId { get; set; }

		string SyncStatusId { get; set; }

		string BillingAccountId { get; set; }

		string OriginFacilityId { get; set; }

		string WebSiteId { get; set; }

		string ProductStoreId { get; set; }

		string TerminalId { get; set; }

		string TransactionId { get; set; }

		string AutoOrderShoppingListId { get; set; }

		string NeedsInventoryIssuance { get; set; }

		string IsRushOrder { get; set; }

		string InternalCode { get; set; }

		decimal? RemainingSubTotal { get; set; }

		decimal? GrandTotal { get; set; }

		string InvoicePerShipment { get; set; }

		bool? Active { get; set; }


	}

	public interface ICreateOrder : ICreateOrMergePatchOrDeleteOrder
	{
        ICreateOrderRoleCommands OrderRoles { get; }

        ICreateOrderRole NewCreateOrderRole();

        ICreateOrderItemCommands OrderItems { get; }

        ICreateOrderItem NewCreateOrderItem();

        ICreateOrderShipGroupCommands OrderShipGroups { get; }

        ICreateOrderShipGroup NewCreateOrderShipGroup();

	}

	public interface IMergePatchOrder : ICreateOrMergePatchOrDeleteOrder
	{

		bool IsPropertyOrderTypeIdRemoved { get; set; }

		bool IsPropertyOrderNameRemoved { get; set; }

		bool IsPropertyExternalIdRemoved { get; set; }

		bool IsPropertySalesChannelEnumIdRemoved { get; set; }

		bool IsPropertyOrderDateRemoved { get; set; }

		bool IsPropertyPriorityRemoved { get; set; }

		bool IsPropertyEntryDateRemoved { get; set; }

		bool IsPropertyPickSheetPrintedDateRemoved { get; set; }

		bool IsPropertyStatusIdRemoved { get; set; }

		bool IsPropertyCurrencyUomIdRemoved { get; set; }

		bool IsPropertySyncStatusIdRemoved { get; set; }

		bool IsPropertyBillingAccountIdRemoved { get; set; }

		bool IsPropertyOriginFacilityIdRemoved { get; set; }

		bool IsPropertyWebSiteIdRemoved { get; set; }

		bool IsPropertyProductStoreIdRemoved { get; set; }

		bool IsPropertyTerminalIdRemoved { get; set; }

		bool IsPropertyTransactionIdRemoved { get; set; }

		bool IsPropertyAutoOrderShoppingListIdRemoved { get; set; }

		bool IsPropertyNeedsInventoryIssuanceRemoved { get; set; }

		bool IsPropertyIsRushOrderRemoved { get; set; }

		bool IsPropertyInternalCodeRemoved { get; set; }

		bool IsPropertyRemainingSubTotalRemoved { get; set; }

		bool IsPropertyGrandTotalRemoved { get; set; }

		bool IsPropertyInvoicePerShipmentRemoved { get; set; }

		bool IsPropertyActiveRemoved { get; set; }

        IOrderRoleCommands OrderRoleCommands { get; }

        ICreateOrderRole NewCreateOrderRole();

        IMergePatchOrderRole NewMergePatchOrderRole();

        IRemoveOrderRole NewRemoveOrderRole();

        IOrderItemCommands OrderItemCommands { get; }

        ICreateOrderItem NewCreateOrderItem();

        IMergePatchOrderItem NewMergePatchOrderItem();

        IRemoveOrderItem NewRemoveOrderItem();

        IOrderShipGroupCommands OrderShipGroupCommands { get; }

        ICreateOrderShipGroup NewCreateOrderShipGroup();

        IMergePatchOrderShipGroup NewMergePatchOrderShipGroup();

        IRemoveOrderShipGroup NewRemoveOrderShipGroup();


	}

	public interface IDeleteOrder : ICreateOrMergePatchOrDeleteOrder
	{
	}

    public interface ICreateOrderRoleCommands : IEnumerable<ICreateOrderRole>
    {
        void Add(ICreateOrderRole c);

        void Remove(ICreateOrderRole c);

        void Clear();

    }

    public interface IOrderRoleCommands : IEnumerable<IOrderRoleCommand>
    {
        void Add(IOrderRoleCommand c);

        void Remove(IOrderRoleCommand c);

        void Clear();

    }

    public interface ICreateOrderItemCommands : IEnumerable<ICreateOrderItem>
    {
        void Add(ICreateOrderItem c);

        void Remove(ICreateOrderItem c);

        void Clear();

    }

    public interface IOrderItemCommands : IEnumerable<IOrderItemCommand>
    {
        void Add(IOrderItemCommand c);

        void Remove(IOrderItemCommand c);

        void Clear();

    }

    public interface ICreateOrderShipGroupCommands : IEnumerable<ICreateOrderShipGroup>
    {
        void Add(ICreateOrderShipGroup c);

        void Remove(ICreateOrderShipGroup c);

        void Clear();

    }

    public interface IOrderShipGroupCommands : IEnumerable<IOrderShipGroupCommand>
    {
        void Add(IOrderShipGroupCommand c);

        void Remove(IOrderShipGroupCommand c);

        void Clear();

    }


}

