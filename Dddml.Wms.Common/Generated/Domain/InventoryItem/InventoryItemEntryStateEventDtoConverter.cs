// <autogenerated>
//   This file was generated by T4 code generator GenerateInventoryItemDomain.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Linq;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;
using Dddml.Wms.Domain.InventoryItem;

namespace Dddml.Wms.Domain.InventoryItem
{

    public class InventoryItemEntryStateEventDtoConverter
    {
        public virtual InventoryItemEntryStateCreatedOrMergePatchedOrRemovedDto ToInventoryItemEntryStateEventDto(IInventoryItemEntryEvent stateEvent)
        {
            if (stateEvent.EventType == StateEventType.Created)
            {
                var e = (IInventoryItemEntryStateCreated)stateEvent;
                return ToInventoryItemEntryStateCreatedDto(e);
            }
            throw DomainError.Named("invalidEventType", String.Format("Invalid state event type: {0}", stateEvent.EventType));
        }

        public virtual InventoryItemEntryStateCreatedDto ToInventoryItemEntryStateCreatedDto(IInventoryItemEntryStateCreated e)
        {
            var dto = new InventoryItemEntryStateCreatedDto();
            dto.InventoryItemEntryEventId = e.InventoryItemEntryEventId;
            dto.CreatedAt = e.CreatedAt;
            dto.CreatedBy = e.CreatedBy;
            dto.Version = e.Version;
            dto.CommandId = e.CommandId;
            dto.OnHandQuantity = e.OnHandQuantity;
            dto.InTransitQuantity = e.InTransitQuantity;
            dto.ReservedQuantity = e.ReservedQuantity;
            dto.OccupiedQuantity = e.OccupiedQuantity;
            dto.VirtualQuantity = e.VirtualQuantity;
            dto.Source = e.Source;
            dto.OccurredAt = e.OccurredAt;
            return dto;
        }


    }


}

