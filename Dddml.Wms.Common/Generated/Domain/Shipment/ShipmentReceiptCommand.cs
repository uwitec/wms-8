// <autogenerated>
//   This file was generated by T4 code generator GenerateShipmentDomain.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;
using Dddml.Wms.Domain.Shipment;

namespace Dddml.Wms.Domain.Shipment
{

	public abstract class ShipmentReceiptCommandBase : IShipmentReceiptCommand
	{
		public virtual string ReceiptSeqId { get; set; }


		public virtual string RequesterId { get; set; }

		public virtual string CommandId { get; set; }

        object ICommand.RequesterId
        {
            get { return this.RequesterId; }
            set { this.RequesterId = (string)value; }
        }

        string ICommand.CommandId
        {
            get { return this.CommandId; }
            set { this.CommandId = value; }
        }

		public virtual string ProductId { get; set; }

		public virtual string AttributeSetInstanceId { get; set; }

		public virtual string LocatorId { get; set; }

		public virtual string ShipmentItemSeqId { get; set; }

		public virtual string ShipmentPackageSeqId { get; set; }

		public virtual string OrderId { get; set; }

		public virtual string OrderItemSeqId { get; set; }

		public virtual string ReturnId { get; set; }

		public virtual string ReturnItemSeqId { get; set; }

		public virtual string RejectionReasonId { get; set; }

		public virtual string DamageReasonId { get; set; }

		public virtual string ReceivedBy { get; set; }

		public virtual DateTime? DatetimeReceived { get; set; }

		public virtual string ItemDescription { get; set; }

		public virtual decimal? AcceptedQuantity { get; set; }

		public virtual decimal? RejectedQuantity { get; set; }

		public virtual decimal? DamagedQuantity { get; set; }

		public virtual bool? Active { get; set; }

		public virtual ISet<string> DamageStatusIds { get; set; }

		// Outer Id:

		public virtual string ShipmentId { get; set; }


		// //////////////////////////////////////////////////

        string ICommandDto.CommandType 
        {
            get { return this.GetCommandType(); }
        }

        protected abstract string GetCommandType();


	}


	public class CreateShipmentReceipt : ShipmentReceiptCommandBase, ICreateShipmentReceipt
	{
		
		public CreateShipmentReceipt ()
		{
		}


        private CreateShipmentReceiptImageCommands _shipmentReceiptImages = new CreateShipmentReceiptImageCommands();

        public ICreateShipmentReceiptImageCommands ShipmentReceiptImages
        {
            get
            {
                return this._shipmentReceiptImages;
            }
        }

        public CreateShipmentReceiptImage NewCreateShipmentReceiptImage()
        {
            var c = new CreateShipmentReceiptImage();
            c.ShipmentId = this.ShipmentId;

            c.ShipmentReceiptReceiptSeqId = this.ReceiptSeqId;

            return c;
        }

        ICreateShipmentReceiptImage ICreateShipmentReceipt.NewCreateShipmentReceiptImage()
        {
            return this.NewCreateShipmentReceiptImage();
        }



        protected override string GetCommandType()
        {
            return Dddml.Wms.Specialization.CommandType.Create;
        }
	}


	public class MergePatchShipmentReceipt :ShipmentReceiptCommandBase, IMergePatchShipmentReceipt
	{

		public virtual bool IsPropertyProductIdRemoved { get; set; }

		public virtual bool IsPropertyAttributeSetInstanceIdRemoved { get; set; }

		public virtual bool IsPropertyLocatorIdRemoved { get; set; }

		public virtual bool IsPropertyShipmentItemSeqIdRemoved { get; set; }

		public virtual bool IsPropertyShipmentPackageSeqIdRemoved { get; set; }

		public virtual bool IsPropertyOrderIdRemoved { get; set; }

		public virtual bool IsPropertyOrderItemSeqIdRemoved { get; set; }

		public virtual bool IsPropertyReturnIdRemoved { get; set; }

		public virtual bool IsPropertyReturnItemSeqIdRemoved { get; set; }

		public virtual bool IsPropertyRejectionReasonIdRemoved { get; set; }

		public virtual bool IsPropertyDamageStatusIdsRemoved { get; set; }

		public virtual bool IsPropertyDamageReasonIdRemoved { get; set; }

		public virtual bool IsPropertyReceivedByRemoved { get; set; }

		public virtual bool IsPropertyDatetimeReceivedRemoved { get; set; }

		public virtual bool IsPropertyItemDescriptionRemoved { get; set; }

		public virtual bool IsPropertyAcceptedQuantityRemoved { get; set; }

		public virtual bool IsPropertyRejectedQuantityRemoved { get; set; }

		public virtual bool IsPropertyDamagedQuantityRemoved { get; set; }

		public virtual bool IsPropertyActiveRemoved { get; set; }


		public MergePatchShipmentReceipt ()
		{
		}

        private ShipmentReceiptImageCommands _shipmentReceiptImageCommands = new ShipmentReceiptImageCommands();

        public IShipmentReceiptImageCommands ShipmentReceiptImageCommands
        {
            get
            {
                return this._shipmentReceiptImageCommands;
            }
        }


        public CreateShipmentReceiptImage NewCreateShipmentReceiptImage()
        {
            var c = new CreateShipmentReceiptImage();
            c.ShipmentId = this.ShipmentId;

            c.ShipmentReceiptReceiptSeqId = this.ReceiptSeqId;

            return c;
        }

        ICreateShipmentReceiptImage IMergePatchShipmentReceipt.NewCreateShipmentReceiptImage()
        {
            return this.NewCreateShipmentReceiptImage();
        }

        public MergePatchShipmentReceiptImage NewMergePatchShipmentReceiptImage()
        {
            var c = new MergePatchShipmentReceiptImage();
            c.ShipmentId = this.ShipmentId;

            c.ShipmentReceiptReceiptSeqId = this.ReceiptSeqId;

            return c;
        }

        IMergePatchShipmentReceiptImage IMergePatchShipmentReceipt.NewMergePatchShipmentReceiptImage()
        {
            return this.NewMergePatchShipmentReceiptImage();
        }


        public RemoveShipmentReceiptImage NewRemoveShipmentReceiptImage()
        {
            var c = new RemoveShipmentReceiptImage();
            c.ShipmentId = this.ShipmentId;

            c.ShipmentReceiptReceiptSeqId = this.ReceiptSeqId;

            return c;
        }

        IRemoveShipmentReceiptImage IMergePatchShipmentReceipt.NewRemoveShipmentReceiptImage()
        {
            return this.NewRemoveShipmentReceiptImage();
        }


        protected override string GetCommandType()
        {
            return Dddml.Wms.Specialization.CommandType.MergePatch;
        }

	}

	public class RemoveShipmentReceipt : ShipmentReceiptCommandBase, IRemoveShipmentReceipt
	{
		public RemoveShipmentReceipt ()
		{
		}

        protected override string GetCommandType()
        {
            return Dddml.Wms.Specialization.CommandType.Remove;
        }
	}


    public class CreateShipmentReceiptImageCommands : ICreateShipmentReceiptImageCommands
    {
        private List<ICreateShipmentReceiptImage> _innerCommands = new List<ICreateShipmentReceiptImage>();

        public void Add(ICreateShipmentReceiptImage c)
        {
            _innerCommands.Add(c);
        }

        public void Remove(ICreateShipmentReceiptImage c)
        {
            _innerCommands.Remove(c);
        }

        public void Clear()
        {
            _innerCommands.Clear();
        }

        public IEnumerator<ICreateShipmentReceiptImage> GetEnumerator()
        {
            return _innerCommands.GetEnumerator();
        }

        System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()
        {
            return _innerCommands.GetEnumerator();
        }

    }

    public class ShipmentReceiptImageCommands : IShipmentReceiptImageCommands
    {
        private List<IShipmentReceiptImageCommand> _innerCommands = new List<IShipmentReceiptImageCommand>();

        public void Add(IShipmentReceiptImageCommand c)
        {
            _innerCommands.Add(c);
        }

        public void Remove(IShipmentReceiptImageCommand c)
        {
            _innerCommands.Remove(c);
        }

        public void Clear()
        {
            _innerCommands.Clear();
        }

        public IEnumerator<IShipmentReceiptImageCommand> GetEnumerator()
        {
            return _innerCommands.GetEnumerator();
        }

        System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()
        {
            return _innerCommands.GetEnumerator();
        }

    }

}
