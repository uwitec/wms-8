// <autogenerated>
//   This file was generated by T4 code generator GenerateShipmentDomain.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Linq;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;
using Dddml.Wms.Domain.Shipment;

namespace Dddml.Wms.Domain.Shipment
{

    public class ShipmentImageStateEventDtoConverter
    {
        public virtual ShipmentImageStateCreatedOrMergePatchedOrRemovedDto ToShipmentImageStateEventDto(IShipmentImageEvent stateEvent)
        {
            if (stateEvent.EventType == StateEventType.Created)
            {
                var e = (IShipmentImageStateCreated)stateEvent;
                return ToShipmentImageStateCreatedDto(e);
            }
            else if (stateEvent.EventType == StateEventType.MergePatched)
            {
                var e = (IShipmentImageStateMergePatched)stateEvent;
                return ToShipmentImageStateMergePatchedDto(e);
            }
            else if (stateEvent.EventType == StateEventType.Removed)
            {
                var e = (IShipmentImageStateRemoved)stateEvent;
                return ToShipmentImageStateRemovedDto(e);
            }
            throw DomainError.Named("invalidEventType", String.Format("Invalid state event type: {0}", stateEvent.EventType));
        }

        public virtual ShipmentImageStateCreatedDto ToShipmentImageStateCreatedDto(IShipmentImageStateCreated e)
        {
            var dto = new ShipmentImageStateCreatedDto();
            dto.ShipmentImageEventId = e.ShipmentImageEventId;
            dto.CreatedAt = e.CreatedAt;
            dto.CreatedBy = e.CreatedBy;
            dto.Version = e.Version;
            dto.CommandId = e.CommandId;
            dto.Url = e.Url;
            dto.Active = e.Active;
            return dto;
        }

        public virtual ShipmentImageStateMergePatchedDto ToShipmentImageStateMergePatchedDto(IShipmentImageStateMergePatched e)
        {
            var dto = new ShipmentImageStateMergePatchedDto();
            dto.ShipmentImageEventId = e.ShipmentImageEventId;
            dto.CreatedAt = e.CreatedAt;
            dto.CreatedBy = e.CreatedBy;
            dto.Version = e.Version;
            dto.CommandId = e.CommandId;
            dto.Url = e.Url;
            dto.Active = e.Active;
            dto.IsPropertyUrlRemoved = e.IsPropertyUrlRemoved;
            dto.IsPropertyActiveRemoved = e.IsPropertyActiveRemoved;

            return dto;
        }


        public virtual ShipmentImageStateRemovedDto ToShipmentImageStateRemovedDto(IShipmentImageStateRemoved e)
        {
            var dto = new ShipmentImageStateRemovedDto();
            dto.ShipmentImageEventId = e.ShipmentImageEventId;
            dto.CreatedAt = e.CreatedAt;
            dto.CreatedBy = e.CreatedBy;
            dto.Version = e.Version;
            dto.CommandId = e.CommandId;

            return dto;
        }


    }


}

