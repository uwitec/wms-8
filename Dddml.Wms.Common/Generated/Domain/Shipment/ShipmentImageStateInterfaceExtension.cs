// <autogenerated>
//   This file was generated by T4 code generator GenerateShipmentDomain.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;
using Dddml.Wms.Domain.Shipment;

namespace Dddml.Wms.Domain.Shipment
{

	public static partial class ShipmentImageStateInterfaceExtension
	{

        public static IShipmentImageCommand ToCreateOrMergePatchShipmentImage<TCreateShipmentImage, TMergePatchShipmentImage>(this IShipmentImageState state)
            where TCreateShipmentImage : ICreateShipmentImage, new()
            where TMergePatchShipmentImage : IMergePatchShipmentImage, new()
        {
            bool bUnsaved = ((IShipmentImageState)state).IsUnsaved;
            if (bUnsaved)
            {
                return state.ToCreateShipmentImage<TCreateShipmentImage>();
            }
            else 
            {
                return state.ToMergePatchShipmentImage<TMergePatchShipmentImage>();
            }
        }

        public static TRemoveShipmentImage ToRemoveShipmentImage<TRemoveShipmentImage>(this IShipmentImageState state)
            where TRemoveShipmentImage : IRemoveShipmentImage, new()
        {
            var cmd = new TRemoveShipmentImage();
            cmd.SequenceId = state.SequenceId;
            return cmd;
        }

        public static TMergePatchShipmentImage ToMergePatchShipmentImage<TMergePatchShipmentImage>(this IShipmentImageState state)
            where TMergePatchShipmentImage : IMergePatchShipmentImage, new()
        {
            var cmd = new TMergePatchShipmentImage();

            cmd.SequenceId = state.SequenceId;
            cmd.Url = state.Url;
            cmd.Active = ((IShipmentImageStateProperties)state).Active;
            cmd.ShipmentId = state.ShipmentId;
            
            if (state.Url == null) { cmd.IsPropertyUrlRemoved = true; }
            return cmd;
        }

        public static TCreateShipmentImage ToCreateShipmentImage<TCreateShipmentImage>(this IShipmentImageState state)
            where TCreateShipmentImage : ICreateShipmentImage, new()
        {
            var cmd = new TCreateShipmentImage();

            cmd.SequenceId = state.SequenceId;
            cmd.Url = state.Url;
            cmd.Active = ((IShipmentImageStateProperties)state).Active;
            cmd.ShipmentId = state.ShipmentId;
            return cmd;
        }
		

	}

}

