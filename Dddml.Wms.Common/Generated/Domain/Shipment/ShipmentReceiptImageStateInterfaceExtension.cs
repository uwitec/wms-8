// <autogenerated>
//   This file was generated by T4 code generator GenerateShipmentDomain.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;
using Dddml.Wms.Domain.Shipment;

namespace Dddml.Wms.Domain.Shipment
{

	public static partial class ShipmentReceiptImageStateInterfaceExtension
	{

        public static IShipmentReceiptImageCommand ToCreateOrMergePatchShipmentReceiptImage<TCreateShipmentReceiptImage, TMergePatchShipmentReceiptImage>(this IShipmentReceiptImageState state)
            where TCreateShipmentReceiptImage : ICreateShipmentReceiptImage, new()
            where TMergePatchShipmentReceiptImage : IMergePatchShipmentReceiptImage, new()
        {
            bool bUnsaved = ((IShipmentReceiptImageState)state).IsUnsaved;
            if (bUnsaved)
            {
                return state.ToCreateShipmentReceiptImage<TCreateShipmentReceiptImage>();
            }
            else 
            {
                return state.ToMergePatchShipmentReceiptImage<TMergePatchShipmentReceiptImage>();
            }
        }

        public static TRemoveShipmentReceiptImage ToRemoveShipmentReceiptImage<TRemoveShipmentReceiptImage>(this IShipmentReceiptImageState state)
            where TRemoveShipmentReceiptImage : IRemoveShipmentReceiptImage, new()
        {
            var cmd = new TRemoveShipmentReceiptImage();
            cmd.SequenceId = state.SequenceId;
            return cmd;
        }

        public static TMergePatchShipmentReceiptImage ToMergePatchShipmentReceiptImage<TMergePatchShipmentReceiptImage>(this IShipmentReceiptImageState state)
            where TMergePatchShipmentReceiptImage : IMergePatchShipmentReceiptImage, new()
        {
            var cmd = new TMergePatchShipmentReceiptImage();

            cmd.SequenceId = state.SequenceId;
            cmd.Url = state.Url;
            cmd.Active = ((IShipmentReceiptImageStateProperties)state).Active;
            cmd.ShipmentId = state.ShipmentId;
            cmd.ShipmentReceiptReceiptSeqId = state.ShipmentReceiptReceiptSeqId;
            
            if (state.Url == null) { cmd.IsPropertyUrlRemoved = true; }
            return cmd;
        }

        public static TCreateShipmentReceiptImage ToCreateShipmentReceiptImage<TCreateShipmentReceiptImage>(this IShipmentReceiptImageState state)
            where TCreateShipmentReceiptImage : ICreateShipmentReceiptImage, new()
        {
            var cmd = new TCreateShipmentReceiptImage();

            cmd.SequenceId = state.SequenceId;
            cmd.Url = state.Url;
            cmd.Active = ((IShipmentReceiptImageStateProperties)state).Active;
            cmd.ShipmentId = state.ShipmentId;
            cmd.ShipmentReceiptReceiptSeqId = state.ShipmentReceiptReceiptSeqId;
            return cmd;
        }
		

	}

}

