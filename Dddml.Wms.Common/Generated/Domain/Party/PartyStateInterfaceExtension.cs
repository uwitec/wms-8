// <autogenerated>
//   This file was generated by T4 code generator GeneratePartyDomain.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;
using Dddml.Wms.Domain.Party;

namespace Dddml.Wms.Domain.Party
{

	public static partial class PartyStateInterfaceExtension
	{

        public static IPartyCommand ToCreateOrMergePatchParty<TCreateParty, TMergePatchParty>(this IPartyState state)
            where TCreateParty : ICreateParty, new()
            where TMergePatchParty : IMergePatchParty, new()
        {
            bool bUnsaved = ((IPartyState)state).IsUnsaved;
            if (bUnsaved)
            {
                return state.ToCreateParty<TCreateParty>();
            }
            else 
            {
                return state.ToMergePatchParty<TMergePatchParty>();
            }
        }

        public static TDeleteParty ToDeleteParty<TDeleteParty>(this IPartyState state)
            where TDeleteParty : IDeleteParty, new()
        {
            var cmd = new TDeleteParty();
            cmd.PartyId = state.PartyId;
            cmd.Version = ((IPartyStateProperties)state).Version;

            return cmd;
        }

        public static TMergePatchParty ToMergePatchParty<TMergePatchParty>(this IPartyState state)
            where TMergePatchParty : IMergePatchParty, new()
        {
            var cmd = new TMergePatchParty();

            cmd.Version = ((IPartyStateProperties)state).Version;

            cmd.PartyId = state.PartyId;
            cmd.PartyTypeId = state.PartyTypeId;
            cmd.PrimaryRoleTypeId = state.PrimaryRoleTypeId;
            cmd.ExternalId = state.ExternalId;
            cmd.PreferredCurrencyUomId = state.PreferredCurrencyUomId;
            cmd.Description = state.Description;
            cmd.OrganizationName = state.OrganizationName;
            cmd.IsSummary = state.IsSummary;
            cmd.Salutation = state.Salutation;
            cmd.FirstName = state.FirstName;
            cmd.MiddleName = state.MiddleName;
            cmd.LastName = state.LastName;
            cmd.PersonalTitle = state.PersonalTitle;
            cmd.Nickname = state.Nickname;
            cmd.CardId = state.CardId;
            cmd.Active = ((IPartyStateProperties)state).Active;
            
            if (state.PartyTypeId == null) { cmd.IsPropertyPartyTypeIdRemoved = true; }
            if (state.PrimaryRoleTypeId == null) { cmd.IsPropertyPrimaryRoleTypeIdRemoved = true; }
            if (state.ExternalId == null) { cmd.IsPropertyExternalIdRemoved = true; }
            if (state.PreferredCurrencyUomId == null) { cmd.IsPropertyPreferredCurrencyUomIdRemoved = true; }
            if (state.Description == null) { cmd.IsPropertyDescriptionRemoved = true; }
            if (state.OrganizationName == null) { cmd.IsPropertyOrganizationNameRemoved = true; }
            if (state.Salutation == null) { cmd.IsPropertySalutationRemoved = true; }
            if (state.FirstName == null) { cmd.IsPropertyFirstNameRemoved = true; }
            if (state.MiddleName == null) { cmd.IsPropertyMiddleNameRemoved = true; }
            if (state.LastName == null) { cmd.IsPropertyLastNameRemoved = true; }
            if (state.PersonalTitle == null) { cmd.IsPropertyPersonalTitleRemoved = true; }
            if (state.Nickname == null) { cmd.IsPropertyNicknameRemoved = true; }
            if (state.CardId == null) { cmd.IsPropertyCardIdRemoved = true; }
            return cmd;
        }

        public static TCreateParty ToCreateParty<TCreateParty>(this IPartyState state)
            where TCreateParty : ICreateParty, new()
        {
            var cmd = new TCreateParty();

            cmd.Version = ((IPartyStateProperties)state).Version;

            cmd.PartyId = state.PartyId;
            cmd.PartyTypeId = state.PartyTypeId;
            cmd.PrimaryRoleTypeId = state.PrimaryRoleTypeId;
            cmd.ExternalId = state.ExternalId;
            cmd.PreferredCurrencyUomId = state.PreferredCurrencyUomId;
            cmd.Description = state.Description;
            cmd.OrganizationName = state.OrganizationName;
            cmd.IsSummary = state.IsSummary;
            cmd.Salutation = state.Salutation;
            cmd.FirstName = state.FirstName;
            cmd.MiddleName = state.MiddleName;
            cmd.LastName = state.LastName;
            cmd.PersonalTitle = state.PersonalTitle;
            cmd.Nickname = state.Nickname;
            cmd.CardId = state.CardId;
            cmd.Active = ((IPartyStateProperties)state).Active;
            return cmd;
        }
		

	}

}

