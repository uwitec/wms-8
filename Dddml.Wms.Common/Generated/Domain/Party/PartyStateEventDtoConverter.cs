// <autogenerated>
//   This file was generated by T4 code generator GeneratePartyDomain.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Linq;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;
using Dddml.Wms.Domain.Party;

namespace Dddml.Wms.Domain.Party
{

    public class PartyStateEventDtoConverter
    {
        public virtual PartyStateCreatedOrMergePatchedOrDeletedDto ToPartyStateEventDto(IPartyEvent stateEvent)
        {
            if (stateEvent.EventType == StateEventType.Created)
            {
                var e = (IPartyStateCreated)stateEvent;
                return ToPartyStateCreatedDto(e);
            }
            else if (stateEvent.EventType == StateEventType.MergePatched)
            {
                var e = (IPartyStateMergePatched)stateEvent;
                return ToPartyStateMergePatchedDto(e);
            }
            else if (stateEvent.EventType == StateEventType.Deleted)
            {
                var e = (IPartyStateDeleted)stateEvent;
                return ToPartyStateDeletedDto(e);
            }
            throw DomainError.Named("invalidEventType", String.Format("Invalid state event type: {0}", stateEvent.EventType));
        }

        public virtual PartyStateCreatedDto ToPartyStateCreatedDto(IPartyStateCreated e)
        {
            var dto = new PartyStateCreatedDto();
            dto.PartyEventId = e.PartyEventId;
            dto.CreatedAt = e.CreatedAt;
            dto.CreatedBy = e.CreatedBy;
            dto.CommandId = e.CommandId;
            dto.PartyTypeId = e.PartyTypeId;
            dto.PrimaryRoleTypeId = e.PrimaryRoleTypeId;
            dto.ExternalId = e.ExternalId;
            dto.PreferredCurrencyUomId = e.PreferredCurrencyUomId;
            dto.Description = e.Description;
            dto.OrganizationName = e.OrganizationName;
            dto.IsSummary = e.IsSummary;
            dto.Salutation = e.Salutation;
            dto.FirstName = e.FirstName;
            dto.MiddleName = e.MiddleName;
            dto.LastName = e.LastName;
            dto.PersonalTitle = e.PersonalTitle;
            dto.Nickname = e.Nickname;
            dto.CardId = e.CardId;
            dto.Active = e.Active;
            return dto;
        }

        public virtual PartyStateMergePatchedDto ToPartyStateMergePatchedDto(IPartyStateMergePatched e)
        {
            var dto = new PartyStateMergePatchedDto();
            dto.PartyEventId = e.PartyEventId;
            dto.CreatedAt = e.CreatedAt;
            dto.CreatedBy = e.CreatedBy;
            dto.CommandId = e.CommandId;
            dto.PartyTypeId = e.PartyTypeId;
            dto.PrimaryRoleTypeId = e.PrimaryRoleTypeId;
            dto.ExternalId = e.ExternalId;
            dto.PreferredCurrencyUomId = e.PreferredCurrencyUomId;
            dto.Description = e.Description;
            dto.OrganizationName = e.OrganizationName;
            dto.IsSummary = e.IsSummary;
            dto.Salutation = e.Salutation;
            dto.FirstName = e.FirstName;
            dto.MiddleName = e.MiddleName;
            dto.LastName = e.LastName;
            dto.PersonalTitle = e.PersonalTitle;
            dto.Nickname = e.Nickname;
            dto.CardId = e.CardId;
            dto.Active = e.Active;
            dto.IsPropertyPartyTypeIdRemoved = e.IsPropertyPartyTypeIdRemoved;
            dto.IsPropertyPrimaryRoleTypeIdRemoved = e.IsPropertyPrimaryRoleTypeIdRemoved;
            dto.IsPropertyExternalIdRemoved = e.IsPropertyExternalIdRemoved;
            dto.IsPropertyPreferredCurrencyUomIdRemoved = e.IsPropertyPreferredCurrencyUomIdRemoved;
            dto.IsPropertyDescriptionRemoved = e.IsPropertyDescriptionRemoved;
            dto.IsPropertyOrganizationNameRemoved = e.IsPropertyOrganizationNameRemoved;
            dto.IsPropertyIsSummaryRemoved = e.IsPropertyIsSummaryRemoved;
            dto.IsPropertySalutationRemoved = e.IsPropertySalutationRemoved;
            dto.IsPropertyFirstNameRemoved = e.IsPropertyFirstNameRemoved;
            dto.IsPropertyMiddleNameRemoved = e.IsPropertyMiddleNameRemoved;
            dto.IsPropertyLastNameRemoved = e.IsPropertyLastNameRemoved;
            dto.IsPropertyPersonalTitleRemoved = e.IsPropertyPersonalTitleRemoved;
            dto.IsPropertyNicknameRemoved = e.IsPropertyNicknameRemoved;
            dto.IsPropertyCardIdRemoved = e.IsPropertyCardIdRemoved;
            dto.IsPropertyActiveRemoved = e.IsPropertyActiveRemoved;

            return dto;
        }


        public virtual PartyStateDeletedDto ToPartyStateDeletedDto(IPartyStateDeleted e)
        {
            var dto = new PartyStateDeletedDto();
            dto.PartyEventId = e.PartyEventId;
            dto.CreatedAt = e.CreatedAt;
            dto.CreatedBy = e.CreatedBy;
            dto.CommandId = e.CommandId;

            return dto;
        }


    }


}

