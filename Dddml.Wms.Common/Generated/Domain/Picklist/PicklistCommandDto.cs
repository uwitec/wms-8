// <autogenerated>
//   This file was generated by T4 code generator GeneratePicklistDomain.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Linq;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;
using Dddml.Wms.Domain.Picklist;
using Dddml.Wms.Domain.PartyRole;

namespace Dddml.Wms.Domain.Picklist
{

	public abstract class PicklistCommandDtoBase : ICommandDto, ICreatePicklist, IMergePatchPicklist, IDeletePicklist
	{

		string IAggregateCommand<string, long>.AggregateId
		{
			get
			{
				return ((ICreateOrMergePatchOrDeletePicklist)this).PicklistId;
			}
		}


		long IAggregateCommand<string, long>.AggregateVersion
		{
			get
			{
				return this.Version != null ? this.Version.Value : default(long);
			}
		}

        long IPicklistCommand.Version
        {
            get { return this.Version != null ? this.Version.Value : default(long); }
            set { this.Version = value; }
        }

		public virtual long? Version { get; set; }

		public virtual string RequesterId { get; set; }

		public virtual string CommandId { get; set; }

        object ICommand.RequesterId
        {
            get { return this.RequesterId; }
            set { this.RequesterId = (string)value; }
        }

        string ICommand.CommandId
        {
            get { return this.CommandId; }
            set { this.CommandId = value; }
        }

		public virtual string PicklistId { get; set; }

		public virtual string Description { get; set; }

		public virtual string FacilityId { get; set; }

		public virtual string ShipmentMethodTypeId { get; set; }

		public virtual string StatusId { get; set; }

		public virtual DateTime? PicklistDate { get; set; }

		public virtual long? PickwaveId { get; set; }

		public virtual bool? Active { get; set; }

		public virtual bool? IsPropertyDescriptionRemoved { get; set; }

        bool IMergePatchPicklist.IsPropertyDescriptionRemoved
        {
            get
            {
                var b = this.IsPropertyDescriptionRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return false;
            }
            set
            {
                this.IsPropertyDescriptionRemoved = value;
            }
        }

		public virtual bool? IsPropertyFacilityIdRemoved { get; set; }

        bool IMergePatchPicklist.IsPropertyFacilityIdRemoved
        {
            get
            {
                var b = this.IsPropertyFacilityIdRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return false;
            }
            set
            {
                this.IsPropertyFacilityIdRemoved = value;
            }
        }

		public virtual bool? IsPropertyShipmentMethodTypeIdRemoved { get; set; }

        bool IMergePatchPicklist.IsPropertyShipmentMethodTypeIdRemoved
        {
            get
            {
                var b = this.IsPropertyShipmentMethodTypeIdRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return false;
            }
            set
            {
                this.IsPropertyShipmentMethodTypeIdRemoved = value;
            }
        }

		public virtual bool? IsPropertyStatusIdRemoved { get; set; }

        bool IMergePatchPicklist.IsPropertyStatusIdRemoved
        {
            get
            {
                var b = this.IsPropertyStatusIdRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return false;
            }
            set
            {
                this.IsPropertyStatusIdRemoved = value;
            }
        }

		public virtual bool? IsPropertyPicklistDateRemoved { get; set; }

        bool IMergePatchPicklist.IsPropertyPicklistDateRemoved
        {
            get
            {
                var b = this.IsPropertyPicklistDateRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return false;
            }
            set
            {
                this.IsPropertyPicklistDateRemoved = value;
            }
        }

		public virtual bool? IsPropertyPickwaveIdRemoved { get; set; }

        bool IMergePatchPicklist.IsPropertyPickwaveIdRemoved
        {
            get
            {
                var b = this.IsPropertyPickwaveIdRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return false;
            }
            set
            {
                this.IsPropertyPickwaveIdRemoved = value;
            }
        }

		public virtual bool? IsPropertyActiveRemoved { get; set; }

        bool IMergePatchPicklist.IsPropertyActiveRemoved
        {
            get
            {
                var b = this.IsPropertyActiveRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return false;
            }
            set
            {
                this.IsPropertyActiveRemoved = value;
            }
        }

        ICreatePicklistRoleCommands ICreatePicklist.PicklistRoles
        {
            get
            {
                return this._picklistRoles;
            }
        }

        IPicklistRoleCommands IMergePatchPicklist.PicklistRoleCommands
        {
            get
            {
                return this._picklistRoles;
            }
        }

        public virtual CreatePicklistRoleDto NewCreatePicklistRole()
        {
            var c = new CreatePicklistRoleDto();
            c.PicklistId = this.PicklistId;

            return c;
        }

        ICreatePicklistRole ICreatePicklist.NewCreatePicklistRole()
        {
            return this.NewCreatePicklistRole();
        }

        ICreatePicklistRole IMergePatchPicklist.NewCreatePicklistRole()
        {
            return this.NewCreatePicklistRole();
        }

        public virtual MergePatchPicklistRoleDto NewMergePatchPicklistRole()
        {
            var c = new MergePatchPicklistRoleDto();
            c.PicklistId = this.PicklistId;

            return c;
        }

        IMergePatchPicklistRole IMergePatchPicklist.NewMergePatchPicklistRole()
        {
            return this.NewMergePatchPicklistRole();
        }

        public virtual RemovePicklistRoleDto NewRemovePicklistRole()
        {
            var c = new RemovePicklistRoleDto();
            c.PicklistId = this.PicklistId;

            return c;
        }

        IRemovePicklistRole IMergePatchPicklist.NewRemovePicklistRole()
        {
            return this.NewRemovePicklistRole();
        }

        private CreateOrMergePatchOrRemovePicklistRoleDtos _picklistRoles = new CreateOrMergePatchOrRemovePicklistRoleDtos();

        public virtual CreateOrMergePatchOrRemovePicklistRoleDto[] PicklistRoles
        {
            get
            {
                return _picklistRoles.ToArray();
            }
            set
            {
                _picklistRoles.Clear();
                _picklistRoles.AddRange(value);
            }
        }


        string ICommandDto.CommandType 
        {
            get { return this.GetCommandType(); }
        }

        protected abstract string GetCommandType();

	}


    public class CreateOrMergePatchOrDeletePicklistDto : PicklistCommandDtoBase
    {
        private string _commandType;

        public virtual string CommandType
        {
            get { return _commandType; }
            set { _commandType = value; }
        }

        protected override string GetCommandType()
        {
            return this._commandType;
        }

    }



	public class CreatePicklistDto : CreateOrMergePatchOrDeletePicklistDto
	{

        public override string CommandType
        {
            get { return this.GetCommandType(); }
            set { 
				// do nothing
            }
        }

        protected override string GetCommandType()
        {
            return Dddml.Wms.Specialization.CommandType.Create;
        }

	}


	public class MergePatchPicklistDto : CreateOrMergePatchOrDeletePicklistDto
	{

        public override string CommandType
        {
            get { return this.GetCommandType(); }
            set { 
				// do nothing
            }
        }

        protected override string GetCommandType()
        {
            return Dddml.Wms.Specialization.CommandType.MergePatch;
        }

	}

	public class DeletePicklistDto : CreateOrMergePatchOrDeletePicklistDto
	{
        protected override string GetCommandType()
        {
            return Dddml.Wms.Specialization.CommandType.Delete;
        }


        public override string CommandType
        {
            get { return this.GetCommandType(); }
            set { 
				// do nothing
            }
        }

	}

    public static partial class PicklistCommandDtos
    {

    }

}

