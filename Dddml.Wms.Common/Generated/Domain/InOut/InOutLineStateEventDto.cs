// <autogenerated>
//   This file was generated by T4 code generator GenerateInOutDomain.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;
using Dddml.Wms.Domain.InOut;

namespace Dddml.Wms.Domain.InOut
{

	public abstract class InOutLineStateEventDtoBase : IEventDto, IInOutLineStateCreated, IInOutLineStateMergePatched, IInOutLineStateRemoved
	{

        private InOutLineEventId _inOutLineEventId;

		protected internal virtual InOutLineEventId InOutLineEventId 
        {
            get 
            {
                if (_inOutLineEventId == null) { _inOutLineEventId = new InOutLineEventId(); }
                return _inOutLineEventId;
            }
            set
            {
                _inOutLineEventId = value;
            }
        }

        public virtual string LineNumber
        {
            get { return InOutLineEventId.LineNumber; }
            set { InOutLineEventId.LineNumber = value; }
        }

		public virtual string LocatorId { get; set; }

		public virtual string ProductId { get; set; }

		public virtual string AttributeSetInstanceId { get; set; }

		public virtual string DamageStatusId { get; set; }

		public virtual string Description { get; set; }

		public virtual string QuantityUomId { get; set; }

		public virtual decimal? MovementQuantity { get; set; }

		public virtual decimal? PickedQuantity { get; set; }

		public virtual bool? IsInvoiced { get; set; }

		public virtual bool? Processed { get; set; }

		public virtual string RmaLineNumber { get; set; }

		public virtual string ReversalLineNumber { get; set; }

		public virtual bool? Active { get; set; }

		public virtual string CreatedBy { get; set; }

		public virtual DateTime CreatedAt { get; set; }

        public virtual string CommandId { get; set; }

        string IEvent.CommandId { get { return this.CommandId; } set { this.CommandId = value; } }

		InOutLineEventId IGlobalIdentity<InOutLineEventId>.GlobalId {
			get 
			{
				return this.InOutLineEventId;
			}
		}

        public virtual bool EventReadOnly { get; set; }

        bool IInOutLineEvent.ReadOnly
        {
            get
            {
                return this.EventReadOnly;
            }
            set
            {
                this.EventReadOnly = value;
            }
        }

		public virtual long Version { get; set; }

		public virtual bool? IsPropertyLocatorIdRemoved { get; set; }

        bool IInOutLineStateMergePatched.IsPropertyLocatorIdRemoved
        {
            get 
            {
                var b = this.IsPropertyLocatorIdRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return default(bool);
            }
            set 
            {
                this.IsPropertyLocatorIdRemoved = value;
            }
        }

		public virtual bool? IsPropertyProductIdRemoved { get; set; }

        bool IInOutLineStateMergePatched.IsPropertyProductIdRemoved
        {
            get 
            {
                var b = this.IsPropertyProductIdRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return default(bool);
            }
            set 
            {
                this.IsPropertyProductIdRemoved = value;
            }
        }

		public virtual bool? IsPropertyAttributeSetInstanceIdRemoved { get; set; }

        bool IInOutLineStateMergePatched.IsPropertyAttributeSetInstanceIdRemoved
        {
            get 
            {
                var b = this.IsPropertyAttributeSetInstanceIdRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return default(bool);
            }
            set 
            {
                this.IsPropertyAttributeSetInstanceIdRemoved = value;
            }
        }

		public virtual bool? IsPropertyDamageStatusIdRemoved { get; set; }

        bool IInOutLineStateMergePatched.IsPropertyDamageStatusIdRemoved
        {
            get 
            {
                var b = this.IsPropertyDamageStatusIdRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return default(bool);
            }
            set 
            {
                this.IsPropertyDamageStatusIdRemoved = value;
            }
        }

		public virtual bool? IsPropertyDescriptionRemoved { get; set; }

        bool IInOutLineStateMergePatched.IsPropertyDescriptionRemoved
        {
            get 
            {
                var b = this.IsPropertyDescriptionRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return default(bool);
            }
            set 
            {
                this.IsPropertyDescriptionRemoved = value;
            }
        }

		public virtual bool? IsPropertyQuantityUomIdRemoved { get; set; }

        bool IInOutLineStateMergePatched.IsPropertyQuantityUomIdRemoved
        {
            get 
            {
                var b = this.IsPropertyQuantityUomIdRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return default(bool);
            }
            set 
            {
                this.IsPropertyQuantityUomIdRemoved = value;
            }
        }

		public virtual bool? IsPropertyMovementQuantityRemoved { get; set; }

        bool IInOutLineStateMergePatched.IsPropertyMovementQuantityRemoved
        {
            get 
            {
                var b = this.IsPropertyMovementQuantityRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return default(bool);
            }
            set 
            {
                this.IsPropertyMovementQuantityRemoved = value;
            }
        }

		public virtual bool? IsPropertyPickedQuantityRemoved { get; set; }

        bool IInOutLineStateMergePatched.IsPropertyPickedQuantityRemoved
        {
            get 
            {
                var b = this.IsPropertyPickedQuantityRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return default(bool);
            }
            set 
            {
                this.IsPropertyPickedQuantityRemoved = value;
            }
        }

		public virtual bool? IsPropertyIsInvoicedRemoved { get; set; }

        bool IInOutLineStateMergePatched.IsPropertyIsInvoicedRemoved
        {
            get 
            {
                var b = this.IsPropertyIsInvoicedRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return default(bool);
            }
            set 
            {
                this.IsPropertyIsInvoicedRemoved = value;
            }
        }

		public virtual bool? IsPropertyProcessedRemoved { get; set; }

        bool IInOutLineStateMergePatched.IsPropertyProcessedRemoved
        {
            get 
            {
                var b = this.IsPropertyProcessedRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return default(bool);
            }
            set 
            {
                this.IsPropertyProcessedRemoved = value;
            }
        }

		public virtual bool? IsPropertyRmaLineNumberRemoved { get; set; }

        bool IInOutLineStateMergePatched.IsPropertyRmaLineNumberRemoved
        {
            get 
            {
                var b = this.IsPropertyRmaLineNumberRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return default(bool);
            }
            set 
            {
                this.IsPropertyRmaLineNumberRemoved = value;
            }
        }

		public virtual bool? IsPropertyReversalLineNumberRemoved { get; set; }

        bool IInOutLineStateMergePatched.IsPropertyReversalLineNumberRemoved
        {
            get 
            {
                var b = this.IsPropertyReversalLineNumberRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return default(bool);
            }
            set 
            {
                this.IsPropertyReversalLineNumberRemoved = value;
            }
        }

		public virtual bool? IsPropertyActiveRemoved { get; set; }

        bool IInOutLineStateMergePatched.IsPropertyActiveRemoved
        {
            get 
            {
                var b = this.IsPropertyActiveRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return default(bool);
            }
            set 
            {
                this.IsPropertyActiveRemoved = value;
            }
        }

		string ICreated<string>.CreatedBy {
			get {
				return this.CreatedBy;
			}
			set {
				this.CreatedBy = value;
			}
		}

		DateTime ICreated<string>.CreatedAt {
			get {
				return this.CreatedAt;
			}
			set {
				this.CreatedAt = value;
			}
		}


        private InOutLineImageStateCreatedOrMergePatchedOrRemovedDtos _inOutLineImageEvents = new InOutLineImageStateCreatedOrMergePatchedOrRemovedDtos();

        public virtual InOutLineImageStateCreatedOrMergePatchedOrRemovedDto[] InOutLineImageEvents
        {
            get
            {
                return _inOutLineImageEvents.ToArray();
            }
            set
            {
                _inOutLineImageEvents.Clear();
                _inOutLineImageEvents.AddRange(value);
            }
        }



        private InOutLineImageEventId NewInOutLineImageEventId(string sequenceId)
        {
            var eId = new InOutLineImageEventId();
            eId.InOutDocumentNumber = this.InOutLineEventId.InOutDocumentNumber;
            eId.InOutLineLineNumber = this.InOutLineEventId.LineNumber;
            eId.SequenceId = sequenceId;
            eId.InOutVersion = this.InOutLineEventId.InOutVersion;
            return eId;
        }

        public virtual InOutLineImageStateCreatedDto NewInOutLineImageStateCreated(string sequenceId)
        {
            var e = new InOutLineImageStateCreatedDto();
            var eId = NewInOutLineImageEventId(sequenceId);
            e.InOutLineImageEventId = eId;
            return e;
        }

        public virtual InOutLineImageStateMergePatchedDto NewInOutLineImageStateMergePatched(string sequenceId)
        {
            var e = new InOutLineImageStateMergePatchedDto();
            var eId = NewInOutLineImageEventId(sequenceId);
            e.InOutLineImageEventId = eId;
            return e;
        }

        public virtual InOutLineImageStateRemovedDto NewInOutLineImageStateRemoved(string sequenceId)
        {
            var e = new InOutLineImageStateRemovedDto();
            var eId = NewInOutLineImageEventId(sequenceId);
            e.InOutLineImageEventId = eId;
            return e;
        }

        IEnumerable<IInOutLineImageStateCreated> IInOutLineStateCreated.InOutLineImageEvents
        {
            get { return this._inOutLineImageEvents; }
        }

        void IInOutLineStateCreated.AddInOutLineImageEvent(IInOutLineImageStateCreated e)
        {
            this._inOutLineImageEvents.AddInOutLineImageEvent(e);
        }

        IInOutLineImageStateCreated IInOutLineStateCreated.NewInOutLineImageStateCreated(string sequenceId)
        {
            return NewInOutLineImageStateCreated(sequenceId);
        }

        IEnumerable<IInOutLineImageEvent> IInOutLineStateMergePatched.InOutLineImageEvents
        {
            get { return this._inOutLineImageEvents; }
        }

        void IInOutLineStateMergePatched.AddInOutLineImageEvent(IInOutLineImageEvent e)
        {
            this._inOutLineImageEvents.AddInOutLineImageEvent(e);
        }

        IInOutLineImageStateCreated IInOutLineStateMergePatched.NewInOutLineImageStateCreated(string sequenceId)
        {
            return NewInOutLineImageStateCreated(sequenceId);
        }

        IInOutLineImageStateMergePatched IInOutLineStateMergePatched.NewInOutLineImageStateMergePatched(string sequenceId)
        {
            return NewInOutLineImageStateMergePatched(sequenceId);
        }

        IInOutLineImageStateRemoved IInOutLineStateMergePatched.NewInOutLineImageStateRemoved(string sequenceId)
        {
            return NewInOutLineImageStateRemoved(sequenceId);
        }


        IEnumerable<IInOutLineImageStateRemoved> IInOutLineStateRemoved.InOutLineImageEvents
        {
            get { return this._inOutLineImageEvents; }
        }

        void IInOutLineStateRemoved.AddInOutLineImageEvent(IInOutLineImageStateRemoved e)
        {
            this._inOutLineImageEvents.AddInOutLineImageEvent(e);
        }

        IInOutLineImageStateRemoved IInOutLineStateRemoved.NewInOutLineImageStateRemoved(string sequenceId)
        {
            return NewInOutLineImageStateRemoved(sequenceId);
        }



        InOutLineEventId IInOutLineEvent.InOutLineEventId
        {
            get { return this.InOutLineEventId; }
        }

        protected InOutLineStateEventDtoBase()
        {
        }

        protected InOutLineStateEventDtoBase(InOutLineEventId stateEventId)
        {
            this.InOutLineEventId = stateEventId;
        }

        // //////////////////////////////////////////////////

        string IEventDto.EventType 
        {
            get { return this.GetEventType(); }
        }

        protected abstract string GetEventType();

	}


    public class InOutLineStateCreatedOrMergePatchedOrRemovedDto : InOutLineStateEventDtoBase
    {
        private string _eventType;

        public virtual string EventType
        {
            get { return _eventType; }
            set { _eventType = value; }
        }

        protected override string GetEventType()
        {
            return this._eventType;
        }

    }



	public class InOutLineStateCreatedDto : InOutLineStateCreatedOrMergePatchedOrRemovedDto
	{
		public InOutLineStateCreatedDto()
		{
		}

        public override string EventType
        {
            get { return this.GetEventType(); }
            set
            {
                // do nothing
            }
        }

        protected override string GetEventType()
        {
            return Dddml.Wms.Specialization.StateEventType.Created;
        }

	}


	public class InOutLineStateMergePatchedDto : InOutLineStateCreatedOrMergePatchedOrRemovedDto
	{
		public InOutLineStateMergePatchedDto()
		{
		}

        public override string EventType
        {
            get { return this.GetEventType(); }
            set
            {
                // do nothing
            }
        }

        protected override string GetEventType()
        {
            return Dddml.Wms.Specialization.StateEventType.MergePatched;
        }

	}


	public class InOutLineStateRemovedDto : InOutLineStateCreatedOrMergePatchedOrRemovedDto
	{
		public InOutLineStateRemovedDto()
		{
		}

        public override string EventType
        {
            get { return this.GetEventType(); }
            set
            {
                // do nothing
            }
        }

        protected override string GetEventType()
        {
            return Dddml.Wms.Specialization.StateEventType.Removed;
        }

	}


    public partial class InOutLineStateCreatedOrMergePatchedOrRemovedDtos : IEnumerable<IInOutLineStateCreated>, IEnumerable<IInOutLineStateMergePatched>, IEnumerable<IInOutLineStateRemoved>
    {
        private List<InOutLineStateCreatedOrMergePatchedOrRemovedDto> _innerStateEvents = new List<InOutLineStateCreatedOrMergePatchedOrRemovedDto>();

        public virtual InOutLineStateCreatedOrMergePatchedOrRemovedDto[] ToArray()
        {
            return _innerStateEvents.ToArray();
        }

        public virtual void Clear()
        {
            _innerStateEvents.Clear();
        }

        public virtual void AddRange(IEnumerable<InOutLineStateCreatedOrMergePatchedOrRemovedDto> es)
        {
            _innerStateEvents.AddRange(es);
        }

        System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()
        {
            return _innerStateEvents.GetEnumerator();
        }

        IEnumerator<IInOutLineStateCreated> IEnumerable<IInOutLineStateCreated>.GetEnumerator()
        {
            return _innerStateEvents.GetEnumerator();
        }

        IEnumerator<IInOutLineStateMergePatched> IEnumerable<IInOutLineStateMergePatched>.GetEnumerator()
        {
            return _innerStateEvents.GetEnumerator();
        }

        IEnumerator<IInOutLineStateRemoved> IEnumerable<IInOutLineStateRemoved>.GetEnumerator()
        {
            return _innerStateEvents.GetEnumerator();
        }

        public void AddInOutLineEvent(IInOutLineStateCreated e)
        {
            _innerStateEvents.Add((InOutLineStateCreatedDto)e);
        }

        public void AddInOutLineEvent(IInOutLineEvent e)
        {
            _innerStateEvents.Add((InOutLineStateCreatedOrMergePatchedOrRemovedDto)e);
        }

        public void AddInOutLineEvent(IInOutLineStateRemoved e)
        {
            _innerStateEvents.Add((InOutLineStateRemovedDto)e);
        }

    }


}

