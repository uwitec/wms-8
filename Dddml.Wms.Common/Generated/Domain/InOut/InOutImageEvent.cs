// <autogenerated>
//   This file was generated by T4 code generator GenerateInOutDomain.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;
using Dddml.Wms.Domain.InOut;

namespace Dddml.Wms.Domain.InOut
{

	public abstract class InOutImageEventBase : IInOutImageEvent
	{

		public virtual InOutImageEventId InOutImageEventId { get; set; }

        public virtual string SequenceId
        {
            get { return InOutImageEventId.SequenceId; }
            set { InOutImageEventId.SequenceId = value; }
        }

		public virtual string CreatedBy { get; set; }

		public virtual DateTime CreatedAt { get; set; }

        public virtual string CommandId { get; set; }

        string IEvent.CommandId { get { return this.CommandId; } set { this.CommandId = value; } }

		InOutImageEventId IGlobalIdentity<InOutImageEventId>.GlobalId {
			get
			{
				return this.InOutImageEventId;
			}
		}

        public virtual bool EventReadOnly { get; set; }

        bool IInOutImageEvent.ReadOnly
        {
            get
            {
                return this.EventReadOnly;
            }
            set
            {
                this.EventReadOnly = value;
            }
        }

		public virtual long Version { get; set; }


		string ICreated<string>.CreatedBy {
			get {
				return this.CreatedBy;
			}
			set {
				this.CreatedBy = value;
			}
		}

		DateTime ICreated<string>.CreatedAt {
			get {
				return this.CreatedAt;
			}
			set {
				this.CreatedAt = value;
			}
		}

        protected InOutImageEventBase()
        {
        }

        protected InOutImageEventBase(InOutImageEventId stateEventId)
        {
            this.InOutImageEventId = stateEventId;
        }


        string IEventDto.EventType
        {
            get { return this.GetEventType(); }
        }

        protected abstract string GetEventType();

	}

    public abstract class InOutImageStateEventBase : InOutImageEventBase, IInOutImageStateEvent
    {

		public virtual string Url { get; set; }

		public virtual bool? Active { get; set; }

        protected InOutImageStateEventBase() : base()
        {
        }

        protected InOutImageStateEventBase(InOutImageEventId stateEventId) : base(stateEventId)
        {
        }

    }

	public class InOutImageStateCreated : InOutImageStateEventBase, IInOutImageStateCreated
	{
		public InOutImageStateCreated () : this(new InOutImageEventId())
		{
		}

		public InOutImageStateCreated (InOutImageEventId stateEventId) : base(stateEventId)
		{
		}


        protected override string GetEventType()
        {
            return Dddml.Wms.Specialization.StateEventType.Created;
        }

	}


	public class InOutImageStateMergePatched : InOutImageStateEventBase, IInOutImageStateMergePatched
	{
		public virtual bool IsPropertyUrlRemoved { get; set; }

		public virtual bool IsPropertyActiveRemoved { get; set; }


		public InOutImageStateMergePatched ()
		{
		}

		public InOutImageStateMergePatched (InOutImageEventId stateEventId) : base(stateEventId)
		{
		}


        protected override string GetEventType()
        {
            return Dddml.Wms.Specialization.StateEventType.MergePatched;
        }

	}


	public class InOutImageStateRemoved : InOutImageStateEventBase, IInOutImageStateRemoved
	{
		public InOutImageStateRemoved ()
		{
		}

		public InOutImageStateRemoved (InOutImageEventId stateEventId) : base(stateEventId)
		{
		}

        protected override string GetEventType()
        {
            return Dddml.Wms.Specialization.StateEventType.Removed;
        }



	}



}

