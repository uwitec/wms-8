// <autogenerated>
//   This file was generated by T4 code generator GenerateInOutDomain.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;
using Dddml.Wms.Domain.InOut;

namespace Dddml.Wms.Domain.InOut
{

	public abstract class InOutLineCommandBase : IInOutLineCommand
	{
		public virtual string LineNumber { get; set; }


		public virtual string RequesterId { get; set; }

		public virtual string CommandId { get; set; }

        object ICommand.RequesterId
        {
            get { return this.RequesterId; }
            set { this.RequesterId = (string)value; }
        }

        string ICommand.CommandId
        {
            get { return this.CommandId; }
            set { this.CommandId = value; }
        }

		public virtual string LocatorId { get; set; }

		public virtual string ProductId { get; set; }

		public virtual string AttributeSetInstanceId { get; set; }

		public virtual string Description { get; set; }

		public virtual string QuantityUomId { get; set; }

		public virtual decimal? MovementQuantity { get; set; }

		public virtual decimal? PickedQuantity { get; set; }

		public virtual bool? IsInvoiced { get; set; }

		public virtual bool? Processed { get; set; }

		public virtual string RmaLineNumber { get; set; }

		public virtual string ReversalLineNumber { get; set; }

		public virtual bool? Active { get; set; }

		// Outer Id:

		public virtual string InOutDocumentNumber { get; set; }


		// //////////////////////////////////////////////////

        string ICommandDto.CommandType 
        {
            get { return this.GetCommandType(); }
        }

        protected abstract string GetCommandType();


	}


	public class CreateInOutLine : InOutLineCommandBase, ICreateInOutLine
	{
		
		public CreateInOutLine ()
		{
		}


        private CreateInOutLineImageCommands _inOutLineImages = new CreateInOutLineImageCommands();

        public ICreateInOutLineImageCommands InOutLineImages
        {
            get
            {
                return this._inOutLineImages;
            }
        }

        public CreateInOutLineImage NewCreateInOutLineImage()
        {
            var c = new CreateInOutLineImage();
            c.InOutDocumentNumber = this.InOutDocumentNumber;

            c.InOutLineLineNumber = this.LineNumber;

            return c;
        }

        ICreateInOutLineImage ICreateInOutLine.NewCreateInOutLineImage()
        {
            return this.NewCreateInOutLineImage();
        }



        protected override string GetCommandType()
        {
            return Dddml.Wms.Specialization.CommandType.Create;
        }
	}


	public class MergePatchInOutLine :InOutLineCommandBase, IMergePatchInOutLine
	{

		public virtual bool IsPropertyLocatorIdRemoved { get; set; }

		public virtual bool IsPropertyProductIdRemoved { get; set; }

		public virtual bool IsPropertyAttributeSetInstanceIdRemoved { get; set; }

		public virtual bool IsPropertyDescriptionRemoved { get; set; }

		public virtual bool IsPropertyQuantityUomIdRemoved { get; set; }

		public virtual bool IsPropertyMovementQuantityRemoved { get; set; }

		public virtual bool IsPropertyPickedQuantityRemoved { get; set; }

		public virtual bool IsPropertyIsInvoicedRemoved { get; set; }

		public virtual bool IsPropertyProcessedRemoved { get; set; }

		public virtual bool IsPropertyRmaLineNumberRemoved { get; set; }

		public virtual bool IsPropertyReversalLineNumberRemoved { get; set; }

		public virtual bool IsPropertyActiveRemoved { get; set; }


		public MergePatchInOutLine ()
		{
		}

        private InOutLineImageCommands _inOutLineImageCommands = new InOutLineImageCommands();

        public IInOutLineImageCommands InOutLineImageCommands
        {
            get
            {
                return this._inOutLineImageCommands;
            }
        }


        public CreateInOutLineImage NewCreateInOutLineImage()
        {
            var c = new CreateInOutLineImage();
            c.InOutDocumentNumber = this.InOutDocumentNumber;

            c.InOutLineLineNumber = this.LineNumber;

            return c;
        }

        ICreateInOutLineImage IMergePatchInOutLine.NewCreateInOutLineImage()
        {
            return this.NewCreateInOutLineImage();
        }

        public MergePatchInOutLineImage NewMergePatchInOutLineImage()
        {
            var c = new MergePatchInOutLineImage();
            c.InOutDocumentNumber = this.InOutDocumentNumber;

            c.InOutLineLineNumber = this.LineNumber;

            return c;
        }

        IMergePatchInOutLineImage IMergePatchInOutLine.NewMergePatchInOutLineImage()
        {
            return this.NewMergePatchInOutLineImage();
        }


        public RemoveInOutLineImage NewRemoveInOutLineImage()
        {
            var c = new RemoveInOutLineImage();
            c.InOutDocumentNumber = this.InOutDocumentNumber;

            c.InOutLineLineNumber = this.LineNumber;

            return c;
        }

        IRemoveInOutLineImage IMergePatchInOutLine.NewRemoveInOutLineImage()
        {
            return this.NewRemoveInOutLineImage();
        }


        protected override string GetCommandType()
        {
            return Dddml.Wms.Specialization.CommandType.MergePatch;
        }

	}

	public class RemoveInOutLine : InOutLineCommandBase, IRemoveInOutLine
	{
		public RemoveInOutLine ()
		{
		}

        protected override string GetCommandType()
        {
            return Dddml.Wms.Specialization.CommandType.Remove;
        }
	}


    public class CreateInOutLineImageCommands : ICreateInOutLineImageCommands
    {
        private List<ICreateInOutLineImage> _innerCommands = new List<ICreateInOutLineImage>();

        public void Add(ICreateInOutLineImage c)
        {
            _innerCommands.Add(c);
        }

        public void Remove(ICreateInOutLineImage c)
        {
            _innerCommands.Remove(c);
        }

        public void Clear()
        {
            _innerCommands.Clear();
        }

        public IEnumerator<ICreateInOutLineImage> GetEnumerator()
        {
            return _innerCommands.GetEnumerator();
        }

        System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()
        {
            return _innerCommands.GetEnumerator();
        }

    }

    public class InOutLineImageCommands : IInOutLineImageCommands
    {
        private List<IInOutLineImageCommand> _innerCommands = new List<IInOutLineImageCommand>();

        public void Add(IInOutLineImageCommand c)
        {
            _innerCommands.Add(c);
        }

        public void Remove(IInOutLineImageCommand c)
        {
            _innerCommands.Remove(c);
        }

        public void Clear()
        {
            _innerCommands.Clear();
        }

        public IEnumerator<IInOutLineImageCommand> GetEnumerator()
        {
            return _innerCommands.GetEnumerator();
        }

        System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()
        {
            return _innerCommands.GetEnumerator();
        }

    }

}
