// <autogenerated>
//   This file was generated by T4 code generator GenerateInOutDomain.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Linq;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;
using Dddml.Wms.Domain.InOut;

namespace Dddml.Wms.Domain.InOut
{

    public class InOutImageStateEventDtoConverter
    {
        public virtual InOutImageStateCreatedOrMergePatchedOrRemovedDto ToInOutImageStateEventDto(IInOutImageEvent stateEvent)
        {
            if (stateEvent.EventType == StateEventType.Created)
            {
                var e = (IInOutImageStateCreated)stateEvent;
                return ToInOutImageStateCreatedDto(e);
            }
            else if (stateEvent.EventType == StateEventType.MergePatched)
            {
                var e = (IInOutImageStateMergePatched)stateEvent;
                return ToInOutImageStateMergePatchedDto(e);
            }
            else if (stateEvent.EventType == StateEventType.Removed)
            {
                var e = (IInOutImageStateRemoved)stateEvent;
                return ToInOutImageStateRemovedDto(e);
            }
            throw DomainError.Named("invalidEventType", String.Format("Invalid state event type: {0}", stateEvent.EventType));
        }

        public virtual InOutImageStateCreatedDto ToInOutImageStateCreatedDto(IInOutImageStateCreated e)
        {
            var dto = new InOutImageStateCreatedDto();
            dto.InOutImageEventId = e.InOutImageEventId;
            dto.CreatedAt = e.CreatedAt;
            dto.CreatedBy = e.CreatedBy;
            dto.Version = e.Version;
            dto.CommandId = e.CommandId;
            dto.Url = e.Url;
            dto.Active = e.Active;
            return dto;
        }

        public virtual InOutImageStateMergePatchedDto ToInOutImageStateMergePatchedDto(IInOutImageStateMergePatched e)
        {
            var dto = new InOutImageStateMergePatchedDto();
            dto.InOutImageEventId = e.InOutImageEventId;
            dto.CreatedAt = e.CreatedAt;
            dto.CreatedBy = e.CreatedBy;
            dto.Version = e.Version;
            dto.CommandId = e.CommandId;
            dto.Url = e.Url;
            dto.Active = e.Active;
            dto.IsPropertyUrlRemoved = e.IsPropertyUrlRemoved;
            dto.IsPropertyActiveRemoved = e.IsPropertyActiveRemoved;

            return dto;
        }


        public virtual InOutImageStateRemovedDto ToInOutImageStateRemovedDto(IInOutImageStateRemoved e)
        {
            var dto = new InOutImageStateRemovedDto();
            dto.InOutImageEventId = e.InOutImageEventId;
            dto.CreatedAt = e.CreatedAt;
            dto.CreatedBy = e.CreatedBy;
            dto.Version = e.Version;
            dto.CommandId = e.CommandId;

            return dto;
        }


    }


}

