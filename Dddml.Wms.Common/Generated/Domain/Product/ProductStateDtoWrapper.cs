// <autogenerated>
//   This file was generated by T4 code generator GenerateProductDomain.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;
using Dddml.Wms.Domain.Product;

namespace Dddml.Wms.Domain.Product
{

	public partial class ProductStateDtoWrapper : StateDtoWrapperBase, IProductStateDto, IProductState
	{

        internal static IList<string> _collectionFieldNames = new string[] { "GoodIdentifications" };

        protected override bool IsCollectionField(string fieldName)
        {
            return CollectionUtils.CollectionContainsIgnoringCase(_collectionFieldNames, fieldName);
        }

		private IProductState _state;

        public ProductStateDtoWrapper()
        {
            this._state = new ProductState();
        }

		public ProductStateDtoWrapper(IProductState state)
		{
            this._state = state;
		}

		public IProductState ToProductState()
		{
			return this._state;
		}

		public virtual string ProductId
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("ProductId"))
                {
                    return _state.ProductId;
                }
                return null;
            }
            set
            {
                _state.ProductId = value;
            }
        }

        string IProductStateProperties.ProductId
        {
            get 
            {
                return (this._state as IProductStateProperties).ProductId;
            }
            set 
            {
                (this._state as IProductStateProperties).ProductId = value;
            }
        }

		public virtual string ProductTypeId
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("ProductTypeId"))
                {
                    return _state.ProductTypeId;
                }
                return null;
            }
            set
            {
                _state.ProductTypeId = value;
            }
        }

        string IProductStateProperties.ProductTypeId
        {
            get 
            {
                return (this._state as IProductStateProperties).ProductTypeId;
            }
            set 
            {
                (this._state as IProductStateProperties).ProductTypeId = value;
            }
        }

		public virtual string PrimaryProductCategoryId
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("PrimaryProductCategoryId"))
                {
                    return _state.PrimaryProductCategoryId;
                }
                return null;
            }
            set
            {
                _state.PrimaryProductCategoryId = value;
            }
        }

        string IProductStateProperties.PrimaryProductCategoryId
        {
            get 
            {
                return (this._state as IProductStateProperties).PrimaryProductCategoryId;
            }
            set 
            {
                (this._state as IProductStateProperties).PrimaryProductCategoryId = value;
            }
        }

		public virtual string ManufacturerPartyId
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("ManufacturerPartyId"))
                {
                    return _state.ManufacturerPartyId;
                }
                return null;
            }
            set
            {
                _state.ManufacturerPartyId = value;
            }
        }

        string IProductStateProperties.ManufacturerPartyId
        {
            get 
            {
                return (this._state as IProductStateProperties).ManufacturerPartyId;
            }
            set 
            {
                (this._state as IProductStateProperties).ManufacturerPartyId = value;
            }
        }

		public virtual string FacilityId
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("FacilityId"))
                {
                    return _state.FacilityId;
                }
                return null;
            }
            set
            {
                _state.FacilityId = value;
            }
        }

        string IProductStateProperties.FacilityId
        {
            get 
            {
                return (this._state as IProductStateProperties).FacilityId;
            }
            set 
            {
                (this._state as IProductStateProperties).FacilityId = value;
            }
        }

		public virtual DateTime? IntroductionDate
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("IntroductionDate"))
                {
                    return _state.IntroductionDate;
                }
                return null;
            }
            set
            {
                _state.IntroductionDate = value;
            }
        }

        DateTime? IProductStateProperties.IntroductionDate
        {
            get 
            {
                return (this._state as IProductStateProperties).IntroductionDate;
            }
            set 
            {
                (this._state as IProductStateProperties).IntroductionDate = value;
            }
        }

		public virtual DateTime? ReleaseDate
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("ReleaseDate"))
                {
                    return _state.ReleaseDate;
                }
                return null;
            }
            set
            {
                _state.ReleaseDate = value;
            }
        }

        DateTime? IProductStateProperties.ReleaseDate
        {
            get 
            {
                return (this._state as IProductStateProperties).ReleaseDate;
            }
            set 
            {
                (this._state as IProductStateProperties).ReleaseDate = value;
            }
        }

		public virtual DateTime? SupportDiscontinuationDate
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("SupportDiscontinuationDate"))
                {
                    return _state.SupportDiscontinuationDate;
                }
                return null;
            }
            set
            {
                _state.SupportDiscontinuationDate = value;
            }
        }

        DateTime? IProductStateProperties.SupportDiscontinuationDate
        {
            get 
            {
                return (this._state as IProductStateProperties).SupportDiscontinuationDate;
            }
            set 
            {
                (this._state as IProductStateProperties).SupportDiscontinuationDate = value;
            }
        }

		public virtual DateTime? SalesDiscontinuationDate
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("SalesDiscontinuationDate"))
                {
                    return _state.SalesDiscontinuationDate;
                }
                return null;
            }
            set
            {
                _state.SalesDiscontinuationDate = value;
            }
        }

        DateTime? IProductStateProperties.SalesDiscontinuationDate
        {
            get 
            {
                return (this._state as IProductStateProperties).SalesDiscontinuationDate;
            }
            set 
            {
                (this._state as IProductStateProperties).SalesDiscontinuationDate = value;
            }
        }

		public virtual string SalesDiscWhenNotAvail
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("SalesDiscWhenNotAvail"))
                {
                    return _state.SalesDiscWhenNotAvail;
                }
                return null;
            }
            set
            {
                _state.SalesDiscWhenNotAvail = value;
            }
        }

        string IProductStateProperties.SalesDiscWhenNotAvail
        {
            get 
            {
                return (this._state as IProductStateProperties).SalesDiscWhenNotAvail;
            }
            set 
            {
                (this._state as IProductStateProperties).SalesDiscWhenNotAvail = value;
            }
        }

		public virtual string InternalName
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("InternalName"))
                {
                    return _state.InternalName;
                }
                return null;
            }
            set
            {
                _state.InternalName = value;
            }
        }

        string IProductStateProperties.InternalName
        {
            get 
            {
                return (this._state as IProductStateProperties).InternalName;
            }
            set 
            {
                (this._state as IProductStateProperties).InternalName = value;
            }
        }

		public virtual string BrandName
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("BrandName"))
                {
                    return _state.BrandName;
                }
                return null;
            }
            set
            {
                _state.BrandName = value;
            }
        }

        string IProductStateProperties.BrandName
        {
            get 
            {
                return (this._state as IProductStateProperties).BrandName;
            }
            set 
            {
                (this._state as IProductStateProperties).BrandName = value;
            }
        }

		public virtual string Comments
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("Comments"))
                {
                    return _state.Comments;
                }
                return null;
            }
            set
            {
                _state.Comments = value;
            }
        }

        string IProductStateProperties.Comments
        {
            get 
            {
                return (this._state as IProductStateProperties).Comments;
            }
            set 
            {
                (this._state as IProductStateProperties).Comments = value;
            }
        }

		public virtual string ProductName
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("ProductName"))
                {
                    return _state.ProductName;
                }
                return null;
            }
            set
            {
                _state.ProductName = value;
            }
        }

        string IProductStateProperties.ProductName
        {
            get 
            {
                return (this._state as IProductStateProperties).ProductName;
            }
            set 
            {
                (this._state as IProductStateProperties).ProductName = value;
            }
        }

		public virtual string Description
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("Description"))
                {
                    return _state.Description;
                }
                return null;
            }
            set
            {
                _state.Description = value;
            }
        }

        string IProductStateProperties.Description
        {
            get 
            {
                return (this._state as IProductStateProperties).Description;
            }
            set 
            {
                (this._state as IProductStateProperties).Description = value;
            }
        }

		public virtual string PriceDetailText
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("PriceDetailText"))
                {
                    return _state.PriceDetailText;
                }
                return null;
            }
            set
            {
                _state.PriceDetailText = value;
            }
        }

        string IProductStateProperties.PriceDetailText
        {
            get 
            {
                return (this._state as IProductStateProperties).PriceDetailText;
            }
            set 
            {
                (this._state as IProductStateProperties).PriceDetailText = value;
            }
        }

		public virtual string SmallImageUrl
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("SmallImageUrl"))
                {
                    return _state.SmallImageUrl;
                }
                return null;
            }
            set
            {
                _state.SmallImageUrl = value;
            }
        }

        string IProductStateProperties.SmallImageUrl
        {
            get 
            {
                return (this._state as IProductStateProperties).SmallImageUrl;
            }
            set 
            {
                (this._state as IProductStateProperties).SmallImageUrl = value;
            }
        }

		public virtual string MediumImageUrl
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("MediumImageUrl"))
                {
                    return _state.MediumImageUrl;
                }
                return null;
            }
            set
            {
                _state.MediumImageUrl = value;
            }
        }

        string IProductStateProperties.MediumImageUrl
        {
            get 
            {
                return (this._state as IProductStateProperties).MediumImageUrl;
            }
            set 
            {
                (this._state as IProductStateProperties).MediumImageUrl = value;
            }
        }

		public virtual string LargeImageUrl
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("LargeImageUrl"))
                {
                    return _state.LargeImageUrl;
                }
                return null;
            }
            set
            {
                _state.LargeImageUrl = value;
            }
        }

        string IProductStateProperties.LargeImageUrl
        {
            get 
            {
                return (this._state as IProductStateProperties).LargeImageUrl;
            }
            set 
            {
                (this._state as IProductStateProperties).LargeImageUrl = value;
            }
        }

		public virtual string DetailImageUrl
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("DetailImageUrl"))
                {
                    return _state.DetailImageUrl;
                }
                return null;
            }
            set
            {
                _state.DetailImageUrl = value;
            }
        }

        string IProductStateProperties.DetailImageUrl
        {
            get 
            {
                return (this._state as IProductStateProperties).DetailImageUrl;
            }
            set 
            {
                (this._state as IProductStateProperties).DetailImageUrl = value;
            }
        }

		public virtual string OriginalImageUrl
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("OriginalImageUrl"))
                {
                    return _state.OriginalImageUrl;
                }
                return null;
            }
            set
            {
                _state.OriginalImageUrl = value;
            }
        }

        string IProductStateProperties.OriginalImageUrl
        {
            get 
            {
                return (this._state as IProductStateProperties).OriginalImageUrl;
            }
            set 
            {
                (this._state as IProductStateProperties).OriginalImageUrl = value;
            }
        }

		public virtual string DetailScreen
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("DetailScreen"))
                {
                    return _state.DetailScreen;
                }
                return null;
            }
            set
            {
                _state.DetailScreen = value;
            }
        }

        string IProductStateProperties.DetailScreen
        {
            get 
            {
                return (this._state as IProductStateProperties).DetailScreen;
            }
            set 
            {
                (this._state as IProductStateProperties).DetailScreen = value;
            }
        }

		public virtual string InventoryMessage
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("InventoryMessage"))
                {
                    return _state.InventoryMessage;
                }
                return null;
            }
            set
            {
                _state.InventoryMessage = value;
            }
        }

        string IProductStateProperties.InventoryMessage
        {
            get 
            {
                return (this._state as IProductStateProperties).InventoryMessage;
            }
            set 
            {
                (this._state as IProductStateProperties).InventoryMessage = value;
            }
        }

		public virtual string InventoryItemTypeId
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("InventoryItemTypeId"))
                {
                    return _state.InventoryItemTypeId;
                }
                return null;
            }
            set
            {
                _state.InventoryItemTypeId = value;
            }
        }

        string IProductStateProperties.InventoryItemTypeId
        {
            get 
            {
                return (this._state as IProductStateProperties).InventoryItemTypeId;
            }
            set 
            {
                (this._state as IProductStateProperties).InventoryItemTypeId = value;
            }
        }

		public virtual string RequireInventory
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("RequireInventory"))
                {
                    return _state.RequireInventory;
                }
                return null;
            }
            set
            {
                _state.RequireInventory = value;
            }
        }

        string IProductStateProperties.RequireInventory
        {
            get 
            {
                return (this._state as IProductStateProperties).RequireInventory;
            }
            set 
            {
                (this._state as IProductStateProperties).RequireInventory = value;
            }
        }

		public virtual string QuantityUomId
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("QuantityUomId"))
                {
                    return _state.QuantityUomId;
                }
                return null;
            }
            set
            {
                _state.QuantityUomId = value;
            }
        }

        string IProductStateProperties.QuantityUomId
        {
            get 
            {
                return (this._state as IProductStateProperties).QuantityUomId;
            }
            set 
            {
                (this._state as IProductStateProperties).QuantityUomId = value;
            }
        }

		public virtual decimal? QuantityIncluded
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("QuantityIncluded"))
                {
                    return _state.QuantityIncluded;
                }
                return null;
            }
            set
            {
                _state.QuantityIncluded = value;
            }
        }

        decimal? IProductStateProperties.QuantityIncluded
        {
            get 
            {
                return (this._state as IProductStateProperties).QuantityIncluded;
            }
            set 
            {
                (this._state as IProductStateProperties).QuantityIncluded = value;
            }
        }

		public virtual long? PiecesIncluded
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("PiecesIncluded"))
                {
                    return _state.PiecesIncluded;
                }
                return null;
            }
            set
            {
                _state.PiecesIncluded = value;
            }
        }

        long? IProductStateProperties.PiecesIncluded
        {
            get 
            {
                return (this._state as IProductStateProperties).PiecesIncluded;
            }
            set 
            {
                (this._state as IProductStateProperties).PiecesIncluded = value;
            }
        }

		public virtual string RequireAmount
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("RequireAmount"))
                {
                    return _state.RequireAmount;
                }
                return null;
            }
            set
            {
                _state.RequireAmount = value;
            }
        }

        string IProductStateProperties.RequireAmount
        {
            get 
            {
                return (this._state as IProductStateProperties).RequireAmount;
            }
            set 
            {
                (this._state as IProductStateProperties).RequireAmount = value;
            }
        }

		public virtual decimal? FixedAmount
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("FixedAmount"))
                {
                    return _state.FixedAmount;
                }
                return null;
            }
            set
            {
                _state.FixedAmount = value;
            }
        }

        decimal? IProductStateProperties.FixedAmount
        {
            get 
            {
                return (this._state as IProductStateProperties).FixedAmount;
            }
            set 
            {
                (this._state as IProductStateProperties).FixedAmount = value;
            }
        }

		public virtual string AmountUomTypeId
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("AmountUomTypeId"))
                {
                    return _state.AmountUomTypeId;
                }
                return null;
            }
            set
            {
                _state.AmountUomTypeId = value;
            }
        }

        string IProductStateProperties.AmountUomTypeId
        {
            get 
            {
                return (this._state as IProductStateProperties).AmountUomTypeId;
            }
            set 
            {
                (this._state as IProductStateProperties).AmountUomTypeId = value;
            }
        }

		public virtual string WeightUomId
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("WeightUomId"))
                {
                    return _state.WeightUomId;
                }
                return null;
            }
            set
            {
                _state.WeightUomId = value;
            }
        }

        string IProductStateProperties.WeightUomId
        {
            get 
            {
                return (this._state as IProductStateProperties).WeightUomId;
            }
            set 
            {
                (this._state as IProductStateProperties).WeightUomId = value;
            }
        }

		public virtual decimal? ShippingWeight
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("ShippingWeight"))
                {
                    return _state.ShippingWeight;
                }
                return null;
            }
            set
            {
                _state.ShippingWeight = value;
            }
        }

        decimal? IProductStateProperties.ShippingWeight
        {
            get 
            {
                return (this._state as IProductStateProperties).ShippingWeight;
            }
            set 
            {
                (this._state as IProductStateProperties).ShippingWeight = value;
            }
        }

		public virtual decimal? ProductWeight
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("ProductWeight"))
                {
                    return _state.ProductWeight;
                }
                return null;
            }
            set
            {
                _state.ProductWeight = value;
            }
        }

        decimal? IProductStateProperties.ProductWeight
        {
            get 
            {
                return (this._state as IProductStateProperties).ProductWeight;
            }
            set 
            {
                (this._state as IProductStateProperties).ProductWeight = value;
            }
        }

		public virtual string HeightUomId
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("HeightUomId"))
                {
                    return _state.HeightUomId;
                }
                return null;
            }
            set
            {
                _state.HeightUomId = value;
            }
        }

        string IProductStateProperties.HeightUomId
        {
            get 
            {
                return (this._state as IProductStateProperties).HeightUomId;
            }
            set 
            {
                (this._state as IProductStateProperties).HeightUomId = value;
            }
        }

		public virtual decimal? ProductHeight
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("ProductHeight"))
                {
                    return _state.ProductHeight;
                }
                return null;
            }
            set
            {
                _state.ProductHeight = value;
            }
        }

        decimal? IProductStateProperties.ProductHeight
        {
            get 
            {
                return (this._state as IProductStateProperties).ProductHeight;
            }
            set 
            {
                (this._state as IProductStateProperties).ProductHeight = value;
            }
        }

		public virtual decimal? ShippingHeight
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("ShippingHeight"))
                {
                    return _state.ShippingHeight;
                }
                return null;
            }
            set
            {
                _state.ShippingHeight = value;
            }
        }

        decimal? IProductStateProperties.ShippingHeight
        {
            get 
            {
                return (this._state as IProductStateProperties).ShippingHeight;
            }
            set 
            {
                (this._state as IProductStateProperties).ShippingHeight = value;
            }
        }

		public virtual string WidthUomId
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("WidthUomId"))
                {
                    return _state.WidthUomId;
                }
                return null;
            }
            set
            {
                _state.WidthUomId = value;
            }
        }

        string IProductStateProperties.WidthUomId
        {
            get 
            {
                return (this._state as IProductStateProperties).WidthUomId;
            }
            set 
            {
                (this._state as IProductStateProperties).WidthUomId = value;
            }
        }

		public virtual decimal? ProductWidth
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("ProductWidth"))
                {
                    return _state.ProductWidth;
                }
                return null;
            }
            set
            {
                _state.ProductWidth = value;
            }
        }

        decimal? IProductStateProperties.ProductWidth
        {
            get 
            {
                return (this._state as IProductStateProperties).ProductWidth;
            }
            set 
            {
                (this._state as IProductStateProperties).ProductWidth = value;
            }
        }

		public virtual decimal? ShippingWidth
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("ShippingWidth"))
                {
                    return _state.ShippingWidth;
                }
                return null;
            }
            set
            {
                _state.ShippingWidth = value;
            }
        }

        decimal? IProductStateProperties.ShippingWidth
        {
            get 
            {
                return (this._state as IProductStateProperties).ShippingWidth;
            }
            set 
            {
                (this._state as IProductStateProperties).ShippingWidth = value;
            }
        }

		public virtual string DepthUomId
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("DepthUomId"))
                {
                    return _state.DepthUomId;
                }
                return null;
            }
            set
            {
                _state.DepthUomId = value;
            }
        }

        string IProductStateProperties.DepthUomId
        {
            get 
            {
                return (this._state as IProductStateProperties).DepthUomId;
            }
            set 
            {
                (this._state as IProductStateProperties).DepthUomId = value;
            }
        }

		public virtual decimal? ProductDepth
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("ProductDepth"))
                {
                    return _state.ProductDepth;
                }
                return null;
            }
            set
            {
                _state.ProductDepth = value;
            }
        }

        decimal? IProductStateProperties.ProductDepth
        {
            get 
            {
                return (this._state as IProductStateProperties).ProductDepth;
            }
            set 
            {
                (this._state as IProductStateProperties).ProductDepth = value;
            }
        }

		public virtual decimal? ShippingDepth
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("ShippingDepth"))
                {
                    return _state.ShippingDepth;
                }
                return null;
            }
            set
            {
                _state.ShippingDepth = value;
            }
        }

        decimal? IProductStateProperties.ShippingDepth
        {
            get 
            {
                return (this._state as IProductStateProperties).ShippingDepth;
            }
            set 
            {
                (this._state as IProductStateProperties).ShippingDepth = value;
            }
        }

		public virtual string DiameterUomId
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("DiameterUomId"))
                {
                    return _state.DiameterUomId;
                }
                return null;
            }
            set
            {
                _state.DiameterUomId = value;
            }
        }

        string IProductStateProperties.DiameterUomId
        {
            get 
            {
                return (this._state as IProductStateProperties).DiameterUomId;
            }
            set 
            {
                (this._state as IProductStateProperties).DiameterUomId = value;
            }
        }

		public virtual decimal? ProductDiameter
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("ProductDiameter"))
                {
                    return _state.ProductDiameter;
                }
                return null;
            }
            set
            {
                _state.ProductDiameter = value;
            }
        }

        decimal? IProductStateProperties.ProductDiameter
        {
            get 
            {
                return (this._state as IProductStateProperties).ProductDiameter;
            }
            set 
            {
                (this._state as IProductStateProperties).ProductDiameter = value;
            }
        }

		public virtual decimal? ProductRating
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("ProductRating"))
                {
                    return _state.ProductRating;
                }
                return null;
            }
            set
            {
                _state.ProductRating = value;
            }
        }

        decimal? IProductStateProperties.ProductRating
        {
            get 
            {
                return (this._state as IProductStateProperties).ProductRating;
            }
            set 
            {
                (this._state as IProductStateProperties).ProductRating = value;
            }
        }

		public virtual string RatingTypeEnum
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("RatingTypeEnum"))
                {
                    return _state.RatingTypeEnum;
                }
                return null;
            }
            set
            {
                _state.RatingTypeEnum = value;
            }
        }

        string IProductStateProperties.RatingTypeEnum
        {
            get 
            {
                return (this._state as IProductStateProperties).RatingTypeEnum;
            }
            set 
            {
                (this._state as IProductStateProperties).RatingTypeEnum = value;
            }
        }

		public virtual string Returnable
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("Returnable"))
                {
                    return _state.Returnable;
                }
                return null;
            }
            set
            {
                _state.Returnable = value;
            }
        }

        string IProductStateProperties.Returnable
        {
            get 
            {
                return (this._state as IProductStateProperties).Returnable;
            }
            set 
            {
                (this._state as IProductStateProperties).Returnable = value;
            }
        }

		public virtual string Taxable
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("Taxable"))
                {
                    return _state.Taxable;
                }
                return null;
            }
            set
            {
                _state.Taxable = value;
            }
        }

        string IProductStateProperties.Taxable
        {
            get 
            {
                return (this._state as IProductStateProperties).Taxable;
            }
            set 
            {
                (this._state as IProductStateProperties).Taxable = value;
            }
        }

		public virtual string ChargeShipping
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("ChargeShipping"))
                {
                    return _state.ChargeShipping;
                }
                return null;
            }
            set
            {
                _state.ChargeShipping = value;
            }
        }

        string IProductStateProperties.ChargeShipping
        {
            get 
            {
                return (this._state as IProductStateProperties).ChargeShipping;
            }
            set 
            {
                (this._state as IProductStateProperties).ChargeShipping = value;
            }
        }

		public virtual string AutoCreateKeywords
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("AutoCreateKeywords"))
                {
                    return _state.AutoCreateKeywords;
                }
                return null;
            }
            set
            {
                _state.AutoCreateKeywords = value;
            }
        }

        string IProductStateProperties.AutoCreateKeywords
        {
            get 
            {
                return (this._state as IProductStateProperties).AutoCreateKeywords;
            }
            set 
            {
                (this._state as IProductStateProperties).AutoCreateKeywords = value;
            }
        }

		public virtual string IncludeInPromotions
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("IncludeInPromotions"))
                {
                    return _state.IncludeInPromotions;
                }
                return null;
            }
            set
            {
                _state.IncludeInPromotions = value;
            }
        }

        string IProductStateProperties.IncludeInPromotions
        {
            get 
            {
                return (this._state as IProductStateProperties).IncludeInPromotions;
            }
            set 
            {
                (this._state as IProductStateProperties).IncludeInPromotions = value;
            }
        }

		public virtual string IsVirtual
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("IsVirtual"))
                {
                    return _state.IsVirtual;
                }
                return null;
            }
            set
            {
                _state.IsVirtual = value;
            }
        }

        string IProductStateProperties.IsVirtual
        {
            get 
            {
                return (this._state as IProductStateProperties).IsVirtual;
            }
            set 
            {
                (this._state as IProductStateProperties).IsVirtual = value;
            }
        }

		public virtual string IsVariant
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("IsVariant"))
                {
                    return _state.IsVariant;
                }
                return null;
            }
            set
            {
                _state.IsVariant = value;
            }
        }

        string IProductStateProperties.IsVariant
        {
            get 
            {
                return (this._state as IProductStateProperties).IsVariant;
            }
            set 
            {
                (this._state as IProductStateProperties).IsVariant = value;
            }
        }

		public virtual string VirtualVariantMethodEnum
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("VirtualVariantMethodEnum"))
                {
                    return _state.VirtualVariantMethodEnum;
                }
                return null;
            }
            set
            {
                _state.VirtualVariantMethodEnum = value;
            }
        }

        string IProductStateProperties.VirtualVariantMethodEnum
        {
            get 
            {
                return (this._state as IProductStateProperties).VirtualVariantMethodEnum;
            }
            set 
            {
                (this._state as IProductStateProperties).VirtualVariantMethodEnum = value;
            }
        }

		public virtual string InShippingBox
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("InShippingBox"))
                {
                    return _state.InShippingBox;
                }
                return null;
            }
            set
            {
                _state.InShippingBox = value;
            }
        }

        string IProductStateProperties.InShippingBox
        {
            get 
            {
                return (this._state as IProductStateProperties).InShippingBox;
            }
            set 
            {
                (this._state as IProductStateProperties).InShippingBox = value;
            }
        }

		public virtual string DefaultShipmentBoxTypeId
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("DefaultShipmentBoxTypeId"))
                {
                    return _state.DefaultShipmentBoxTypeId;
                }
                return null;
            }
            set
            {
                _state.DefaultShipmentBoxTypeId = value;
            }
        }

        string IProductStateProperties.DefaultShipmentBoxTypeId
        {
            get 
            {
                return (this._state as IProductStateProperties).DefaultShipmentBoxTypeId;
            }
            set 
            {
                (this._state as IProductStateProperties).DefaultShipmentBoxTypeId = value;
            }
        }

		public virtual bool? IsSerialNumbered
        {
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("IsSerialNumbered"))
                {
                    return _state.IsSerialNumbered;
                }
                return null;
            }
            set
            {
                if (value != null && value.HasValue)
                {
                    _state.IsSerialNumbered = value.Value;
                }
            }
        }

        bool IProductStateProperties.IsSerialNumbered
        {
            get 
            {
                return (this._state as IProductStateProperties).IsSerialNumbered;
            }
            set 
            {
                (this._state as IProductStateProperties).IsSerialNumbered = value;
            }
        }

		public virtual bool? IsManagedByLot
        {
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("IsManagedByLot"))
                {
                    return _state.IsManagedByLot;
                }
                return null;
            }
            set
            {
                if (value != null && value.HasValue)
                {
                    _state.IsManagedByLot = value.Value;
                }
            }
        }

        bool IProductStateProperties.IsManagedByLot
        {
            get 
            {
                return (this._state as IProductStateProperties).IsManagedByLot;
            }
            set 
            {
                (this._state as IProductStateProperties).IsManagedByLot = value;
            }
        }

		public virtual string AttributeSetId
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("AttributeSetId"))
                {
                    return _state.AttributeSetId;
                }
                return null;
            }
            set
            {
                _state.AttributeSetId = value;
            }
        }

        string IProductStateProperties.AttributeSetId
        {
            get 
            {
                return (this._state as IProductStateProperties).AttributeSetId;
            }
            set 
            {
                (this._state as IProductStateProperties).AttributeSetId = value;
            }
        }

		public virtual string AttributeSetInstanceId
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("AttributeSetInstanceId"))
                {
                    return _state.AttributeSetInstanceId;
                }
                return null;
            }
            set
            {
                _state.AttributeSetInstanceId = value;
            }
        }

        string IProductStateProperties.AttributeSetInstanceId
        {
            get 
            {
                return (this._state as IProductStateProperties).AttributeSetInstanceId;
            }
            set 
            {
                (this._state as IProductStateProperties).AttributeSetInstanceId = value;
            }
        }

		public virtual string Grade
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("Grade"))
                {
                    return _state.Grade;
                }
                return null;
            }
            set
            {
                _state.Grade = value;
            }
        }

        string IProductStateProperties.Grade
        {
            get 
            {
                return (this._state as IProductStateProperties).Grade;
            }
            set 
            {
                (this._state as IProductStateProperties).Grade = value;
            }
        }

		public virtual decimal? Gsm
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("Gsm"))
                {
                    return _state.Gsm;
                }
                return null;
            }
            set
            {
                _state.Gsm = value;
            }
        }

        decimal? IProductStateProperties.Gsm
        {
            get 
            {
                return (this._state as IProductStateProperties).Gsm;
            }
            set 
            {
                (this._state as IProductStateProperties).Gsm = value;
            }
        }

		public virtual decimal? CoreDiameter
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("CoreDiameter"))
                {
                    return _state.CoreDiameter;
                }
                return null;
            }
            set
            {
                _state.CoreDiameter = value;
            }
        }

        decimal? IProductStateProperties.CoreDiameter
        {
            get 
            {
                return (this._state as IProductStateProperties).CoreDiameter;
            }
            set 
            {
                (this._state as IProductStateProperties).CoreDiameter = value;
            }
        }

		public virtual decimal? OutsideDiameter
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("OutsideDiameter"))
                {
                    return _state.OutsideDiameter;
                }
                return null;
            }
            set
            {
                _state.OutsideDiameter = value;
            }
        }

        decimal? IProductStateProperties.OutsideDiameter
        {
            get 
            {
                return (this._state as IProductStateProperties).OutsideDiameter;
            }
            set 
            {
                (this._state as IProductStateProperties).OutsideDiameter = value;
            }
        }

		public virtual decimal? MoisturePct
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("MoisturePct"))
                {
                    return _state.MoisturePct;
                }
                return null;
            }
            set
            {
                _state.MoisturePct = value;
            }
        }

        decimal? IProductStateProperties.MoisturePct
        {
            get 
            {
                return (this._state as IProductStateProperties).MoisturePct;
            }
            set 
            {
                (this._state as IProductStateProperties).MoisturePct = value;
            }
        }

		public virtual bool? Active
        {
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("Active"))
                {
                    return (this._state as IProductStateProperties).Active;
                }
                return null;
            }
            set
            {
                if (value != null && value.HasValue)
                {
                    (this._state as IProductStateProperties).Active = value.Value;
                }
            }
        }

        bool IProductStateProperties.Active
        {
            get 
            {
                return (this._state as IProductStateProperties).Active;
            }
            set 
            {
                (this._state as IProductStateProperties).Active = value;
            }
        }

		public virtual long? Version
        {
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("Version"))
                {
                    return (this._state as IProductStateProperties).Version;
                }
                return null;
            }
            set
            {
                if (value != null && value.HasValue)
                {
                    (this._state as IProductStateProperties).Version = value.Value;
                }
            }
        }

        long IProductStateProperties.Version
        {
            get 
            {
                return (this._state as IProductStateProperties).Version;
            }
            set 
            {
                (this._state as IProductStateProperties).Version = value;
            }
        }

		public virtual string CreatedBy
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("CreatedBy"))
                {
                    return _state.CreatedBy;
                }
                return null;
            }
            set
            {
                _state.CreatedBy = value;
            }
        }

		public virtual DateTime? CreatedAt
        {
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("CreatedAt"))
                {
                    return _state.CreatedAt.Date < default(DateTime).Date.AddDays(1) ? (DateTime?)null : _state.CreatedAt;
                }
                return null;
            }
            set
            {
                if (value != null && value.HasValue)
                {
                    _state.CreatedAt = value.Value;
                }
            }
        }

		public virtual string UpdatedBy
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("UpdatedBy"))
                {
                    return _state.UpdatedBy;
                }
                return null;
            }
            set
            {
                _state.UpdatedBy = value;
            }
        }

		public virtual DateTime? UpdatedAt
        {
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("UpdatedAt"))
                {
                    return _state.UpdatedAt.Date < default(DateTime).Date.AddDays(1) ? (DateTime?)null : _state.UpdatedAt;
                }
                return null;
            }
            set
            {
                if (value != null && value.HasValue)
                {
                    _state.UpdatedAt = value.Value;
                }
            }
        }

		#region IIdentity implementation

		string IGlobalIdentity<string>.GlobalId
		{
			get { return (_state as IProductState).GlobalId; }
		}

		#endregion

		#region IActive implementation

		bool IActive.IsActive()
		{
            return (_state as IActive).IsActive();
		}

		#endregion

		#region ICreated implementation

		string ICreated<string>.CreatedBy
		{
            get { return (_state as IProductState).CreatedBy; }
            set { (_state as IProductState).CreatedBy = value; }
		}

		DateTime ICreated<string>.CreatedAt
		{
            get { return (_state as IProductState).CreatedAt; }
            set { (_state as IProductState).CreatedAt = value; }
		}

		#endregion

		#region IUpdated implementation

		string IUpdated<string>.UpdatedBy
		{
            get { return (_state as IProductState).UpdatedBy; }
            set { (_state as IProductState).UpdatedBy = value; }
		}

		DateTime IUpdated<string>.UpdatedAt
		{
            get { return (_state as IProductState).UpdatedAt; }
            set { (_state as IProductState).UpdatedAt = value; }
		}

		#endregion

		#region IVersioned implementation

		long IAggregateVersioned<long>.AggregateVersion
		{
            get { return (_state as IProductStateProperties).Version; }
		}

		#endregion

        bool IProductState.IsUnsaved
        {
            get { return this.Version == ProductState.VersionZero; }
        }

        public virtual IGoodIdentificationStateDto[] GoodIdentifications
        {
            get 
            {
                if (!(this as IStateDtoWrapper).ReturnedFieldsContains("GoodIdentifications"))
                {
                    return null;
                }
                var dtos = new List<IGoodIdentificationStateDto>();
                if (this._state.GoodIdentifications != null)
                {
                    foreach (var s in this._state.GoodIdentifications)
                    {
                        var dto = new GoodIdentificationStateDtoWrapper((GoodIdentificationState)s);
                        var returnFS = CollectionUtils.DictionaryGetValueIgnoringCase(ReturnedFields, "GoodIdentifications");
                        if (!String.IsNullOrWhiteSpace(returnFS))
                        {
                            (dto as IStateDtoWrapper).ReturnedFieldsString = returnFS;
                        }
                        else
                        {
                            (dto as IStateDtoWrapper).AllFieldsReturned = this.AllFieldsReturned;
                        }
                        dtos.Add(dto);
                    }
                }
                return dtos.ToArray();
            }
            set 
            {
                if (value == null) { value = new GoodIdentificationStateDtoWrapper[0]; }
                var states = new List<IGoodIdentificationState>();
                foreach (var s in value)
                {
                    states.Add(s.ToGoodIdentificationState());
                }
                this._state.GoodIdentifications = new DtoGoodIdentificationStates(this._state, states);
            }
        }

        IGoodIdentificationStates IProductState.GoodIdentifications
        {
            get { return _state.GoodIdentifications; }
            set { _state.GoodIdentifications = value; }
        }

		void IProductState.When(IProductStateCreated e)
		{
            throw new NotSupportedException();
		}

		bool IProductState.ForReapplying
		{
            get { throw new NotSupportedException(); }
		}

        public bool StateReadOnly { get; set; }

        bool IState.ReadOnly
        {
            get { return this.StateReadOnly; }
            set { this.StateReadOnly = value; }
        }

		void IProductState.When(IProductStateMergePatched e)
		{
            throw new NotSupportedException();
		}

		void IProductState.Mutate(IEvent e)
		{
            throw new NotSupportedException();
		}

        // //////////////////////////////////////////////////////////////

        public class DtoGoodIdentificationStates : IGoodIdentificationStates
        {

            private IProductState _outerState;

            private IEnumerable<IGoodIdentificationState> _innerStates;

            public DtoGoodIdentificationStates(IProductState outerState, IEnumerable<IGoodIdentificationState> innerStates)
            {
                this._outerState = outerState;
                if (innerStates == null)
                {
                    this._innerStates = new IGoodIdentificationState[] { };
                }
                else
                {
                    this._innerStates = innerStates;
                }
            }

            public IEnumerator<IGoodIdentificationState> GetEnumerator()
            {
                return _innerStates.GetEnumerator();
            }

            System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()
            {
                return _innerStates.GetEnumerator();
            }

            public IGoodIdentificationState Get(string goodIdentificationTypeId)
            {
                throw new NotSupportedException();
            }

            public IGoodIdentificationState Get(string goodIdentificationTypeId, bool forCreation)
            {
                throw new NotSupportedException();
            }

            public IGoodIdentificationState Get(string goodIdentificationTypeId, bool forCreation, bool nullAllowed)
            {
                throw new NotSupportedException();
            }

            public void Remove(IGoodIdentificationState state)
            {
                throw new NotSupportedException();
            }

            public void AddToSave(IGoodIdentificationState state)
            {
                throw new NotSupportedException();
            }

            public void Save()
            {
                throw new NotSupportedException();
            }
        }

	}

    partial class ProductStateDtoWrapperCollection : StateDtoWrapperCollectionBase<ProductStateDtoWrapper>
    {

        protected override bool IsCollectionField(string fieldName)
        {
            return CollectionUtils.CollectionContainsIgnoringCase(ProductStateDtoWrapper._collectionFieldNames, fieldName);
        }

    }

}

