<#@ template language="C#" debug="True" #>
<#@ output extension="yaml" #>
<#@ assembly name="%DddmlDotNetToolsSolutionDir%\Dddml.Core\bin\Debug\Dddml.Core.dll" #>
<#@ assembly name="%DddmlDotNetToolsSolutionDir%\Dddml.Serialization\bin\Debug\Dddml.Serialization.dll" #>
<#@ assembly name="%DddmlDotNetToolsSolutionDir%\Dddml.T4\bin\Debug\Dddml.T4.dll" #>
<#@ assembly name="%DddmlDotNetToolsSolutionDir%\packages\YamlDotNet.3.8.0\lib\net35\YamlDotNet.dll" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="Dddml.Core.Dom" #>
<#@ import namespace="Dddml.Serialization" #>
<#@ import namespace="Dddml.T4" #>
<#@ import namespace="Dddml.T4.Extensions" #>
<#@ import namespace="Dddml.T4.Generator" #>
<#@ include file="T4Toolbox.tt" #>
<#+
// <copyright file="AttributeSetInstanceDddmlTemplate.tt" company="">
//  Copyright © . All Rights Reserved.
// </copyright>

public class AttributeSetInstanceDddmlTemplate : CSharpTemplate
{
    IList<ExtensionFieldMetadata> _extensionFields;

    public AttributeSetInstanceDddmlTemplate(IList<ExtensionFieldMetadata> extensionFields)
    {
        this._extensionFields = extensionFields;
    }

	public override string TransformText()
	{

#>
#%DDDML 0.1

---

# ------------------------------
aggregates:


    # --------------- aggregate ---------------
    AttributeSetInstance:
      immutable: true    
      isDynamic: true


      id:
        name: AttributeSetInstanceId
        type: string
      
            
      properties:

        AttributeSetId:
          type: string
        
        OrganizationId:
          type: string
          
        ReferenceId:
          type: string

        SerialNumber:
          type: string

        LotId:
          type: string

        #DateTime? GuaranteeDate

        StatusId:
          referenceType: StatusItem

        ImageUrl:
          type: string
          length: 255

        Description:
          type: string

        Hash:
          type: string
          isDerived: true
          #isTransient: false
        
<#+
    foreach (var f in _extensionFields)
    {
#>
        <#= f.Name #>:
          type: <#= f.Type #>
          <#= (f.Length != null) ? "length: " + f.Length : String.Empty #>

<#+
    }
#>

<#+
        return this.GenerationEnvironment.ToString();
	}
}
#>
