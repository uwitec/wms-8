<#@ template language="C#" debug="True" #>
<#@ include file="T4Toolbox.tt" #>
<#+
// <copyright file="JavaAttributeSetInstanceExtensionFieldUtilsTemplate.tt" company="dddml.org">
//  Copyright © . All Rights Reserved.
// </copyright>

public class JavaAttributeSetInstancePropertyUtilsTemplate : CSharpTemplate
{
    IList<ExtensionFieldMetadata> _extensionFields;

    public JavaAttributeSetInstancePropertyUtilsTemplate(IList<ExtensionFieldMetadata> extensionFields)
    {
        this._extensionFields = extensionFields;
    }

	public override string TransformText()
	{
		base.TransformText();

#>
package org.dddml.wms.support;

import org.dddml.wms.domain.*;

import java.io.UnsupportedEncodingException;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import org.dddml.wms.domain.attributesetinstance.*;


public class AttributeSetInstancePropertyUtils {
    private AttributeSetInstancePropertyUtils() {
    }

    private static String getSafeStringValue(String str) {
        if (str == null) {
            return "[null]";
        }
        return str;
    }


    private static String getMD5HashString(MessageDigest md5Hash, String input) {
        try {
            byte[] data = md5Hash.digest(input.getBytes("UTF-8"));
            StringBuilder sBuilder = new StringBuilder();
            for (int i = 0; i < data.length; i++) {
                String hex = Integer.toHexString(data[i] & 0xFF);
                if (hex.length() == 1) {
                    hex = '0' + hex;
                }
                sBuilder.append(hex.toLowerCase());
            }
            return sBuilder.toString();
        } catch (UnsupportedEncodingException ex) {
            return null;
        }
    }

<#+
		var getHashParameterTypeNames = new string[] {"AttributeSetInstanceEvent.AttributeSetInstanceStateCreated", "AttributeSetInstanceCommand.CreateAttributeSetInstance", "AttributeSetInstanceState"};
		foreach (var pTypeName in getHashParameterTypeNames)
		{
#>


    public static String getHash(<#= pTypeName #> instance) {
        StringBuilder sb = new StringBuilder();
        sb.append("AttributeSetId").append("=").append(getSafeStringValue(instance.getAttributeSetId())).append("|");
        sb.append("OrganizationId").append("=").append(getSafeStringValue(instance.getOrganizationId())).append("|");
        sb.append("ReferenceId").append("=").append(getSafeStringValue(instance.getReferenceId())).append("|");
        sb.append("SerialNumber").append("=").append(getSafeStringValue(instance.getSerialNumber())).append("|");
        sb.append("LotId").append("=").append(getSafeStringValue(instance.getLotId())).append("|");
        sb.append("StatusId").append("=").append(getSafeStringValue(instance.getStatusId())).append("|");
        sb.append("ImageUrl").append("=").append(getSafeStringValue(instance.getImageUrl())).append("|");
        sb.append("Description").append("=").append(getSafeStringValue(instance.getDescription())).append("|");
        sb.append("Active").append("=").append(instance.getActive()).append("|");
<#+ 
			foreach (var fMeta in this._extensionFields)
			{
				if (fMeta.Type.Equals("string", StringComparison.InvariantCultureIgnoreCase))
				{ 
#>
        sb.append("<#= fMeta.Name #>").append("=").append(getSafeStringValue(instance.get<#= fMeta.Name #>())).append("|");
<#+
				} else {
#>
        sb.append("<#= fMeta.Name #>").append("=").append(instance.get<#= fMeta.Name #>()).append("|");
<#+ 
				}
			}
#>

        try {
            String hash = getMD5HashString(MessageDigest.getInstance("MD5"), sb.toString());
            return hash;
        } catch (NoSuchAlgorithmException ex) {
            return null;
        }
    }

<#+
		}
#>

    public static boolean equals(AttributeSetInstanceCommand.CreateAttributeSetInstance instance1,
                                 AttributeSetInstanceState instance2) {
        if (!propertyEquals(instance1.getAttributeSetId(), instance2.getAttributeSetId())
                || !propertyEquals(instance1.getOrganizationId(), instance2.getOrganizationId())
                || !propertyEquals(instance1.getReferenceId(), instance2.getReferenceId())
                || !propertyEquals(instance1.getSerialNumber(), instance2.getSerialNumber())
                || !propertyEquals(instance1.getLotId(), instance2.getLotId())
                || !propertyEquals(instance1.getStatusId(), instance2.getStatusId())
                || !propertyEquals(instance1.getImageUrl(), instance2.getImageUrl())
                || !propertyEquals(instance1.getDescription(), instance2.getDescription())
                || !propertyEquals(instance1.getActive(), instance2.getActive())
<#+ 
		foreach (var fMeta in this._extensionFields)
		{
#>
                || !propertyEquals(instance1.get<#= fMeta.Name #>(), instance2.get<#= fMeta.Name #>())
<#+ 
		}
#>
            )
        {
            return false; 
        }
        return true;
    }

    private static boolean propertyEquals(Object p1, Object p2) {
        if (p1 == p2) {
            return true;
        }
        if (p1 == null) {
            return false;
        }
        return p1.equals(p2);
    }

}


<#+
        return this.GenerationEnvironment.ToString();
	}
}
#>
